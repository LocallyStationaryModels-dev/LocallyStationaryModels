ys <- ggplot(allpoints, aes(x=X, y=Y, color=predictedvalues$ypredicted)) + geom_point() + scale_color_gradientn(colours = rainbow(5)) + coord_fixed()
means<-means+labs(color="mean")
ys<-ys+labs(color="y")
print(plot_grid(means, ys,labels="AUTO"))
return(allpoints)
}
plot.lsm<-function(model, a, y, d)
{
aa<-as.data.frame(a$anchorpoints)
colnames(aa)<-c("X","Y")
s<-model$solutions
s<-as.data.frame(s)
colnames(s)<-c("lambda1", "lambda2", "phi", "sigma")
g<-cbind(aa,s)
newpoints <- data.frame(X = double(), Y = double())
for (i in 1:dim(g)[1])
{
#newpoints<-rbind(newpoints, c(g$X[i]+a$width/2, g$Y[i]))
#newpoints<-rbind(newpoints, c(g$X[i]-a$width/2, g$Y[i]))
#newpoints<-rbind(newpoints, c(g$X[i], g$Y[i]+a$height/2))
#newpoints<-rbind(newpoints, c(g$X[i], g$Y[i]-a$height/2))
newpoints<-rbind(newpoints, c(g$X[i]+a$width/sqrt(2), g$Y[i]+a$height/sqrt(2)))
newpoints<-rbind(newpoints, c(g$X[i]+a$width/sqrt(2), g$Y[i]-a$height/sqrt(2)))
newpoints<-rbind(newpoints, c(g$X[i]-a$width/sqrt(2), g$Y[i]+a$height/sqrt(2)))
newpoints<-rbind(newpoints, c(g$X[i]-a$width/sqrt(2), g$Y[i]-a$height/sqrt(2)))
}
colnames(newpoints)<-c("X","Y")
parameters<-smoothing(model$solutions,a$anchorpoints,model$delta,as.matrix(newpoints))
parameters<-as.data.frame(parameters)
colnames(parameters)<-c("lambda1", "lambda2", "phi", "sigma")
allpoints<-cbind(newpoints, parameters)
#allpoints<-rbind(g, newpos)
###DATI INIZIALI
dd <- as.data.frame(d)
#windows()
#p <- ggplot(dd, aes(x=V1, y=V2, color=y)) + geom_point() + scale_color_gradientn(colours = rainbow(5)) + coord_fixed()
#print(p)
par(ask=TRUE)
p <- ggplot(dd, aes(x=V1, y=V2, size=y)) + geom_point() + labs(x="X", y="Y")
p <- p + labs(title = "Bubble plot of the initial data", fontface = 'bold')
print(p)
###ELLISSI
p <- ggplot(g, aes(x=X, y=Y)) + geom_ellipse(aes(x0 = X, y0 = Y, a = lambda1, b = lambda2, angle = phi), data = g) + coord_fixed()
print(p)
###PARAMETERS
p1 <- ggplot(allpoints, aes(x=X, y=Y, color=lambda1)) + geom_point() + scale_color_gradientn(colours = rainbow(5)) + coord_fixed()
p2 <- ggplot(allpoints, aes(x=X, y=Y, color=lambda2)) + geom_point() + scale_color_gradientn(colours = rainbow(5)) + coord_fixed()
p3 <- ggplot(allpoints, aes(x=X, y=Y, color=phi)) + geom_point() + scale_color_gradientn(colours = rainbow(5)) + coord_fixed()
p4 <- ggplot(allpoints, aes(x=X, y=Y, color=sigma)) + geom_point() + scale_color_gradientn(colours = rainbow(5)) + coord_fixed()
title <- ggdraw() + draw_label("Scatter plots with the trend of the parameters", fontface='bold')
p <- plot_grid(p1,p2,p3,p4,labels="AUTO")
print(plot_grid(title, p, ncol=1, rel_heights=c(0.1, 1)))
###FUNCTION VALUES
predictedvalues<-predikt(y,d,model$anchorpoints,model$epsilon,model$delta,model$solutions,as.matrix(allpoints)[,1:2])
means <- ggplot(allpoints, aes(x=X, y=Y, color=predictedvalues$predictedmean)) + geom_point() + scale_color_gradientn(colours = rainbow(5)) + coord_fixed()
ys <- ggplot(allpoints, aes(x=X, y=Y, color=predictedvalues$ypredicted)) + geom_point() + scale_color_gradientn(colours = rainbow(5)) + coord_fixed()
means<-means+labs(color="mean")
ys<-ys+labs(color="y")
title <- ggdraw() + draw_label("Scatter plots with the trend of the predicted mean and the predictet y value", fontface='bold')
p <- plot_grid(means, ys, labels="AUTO")
print(plot_grid(title, p, ncol=1, rel_heights=c(0.1, 1)))
return(allpoints)
}
mmypoints <- plot.lsm(r,a,y,d)
plot.lsm<-function(model, a, y, d)
{
aa<-as.data.frame(a$anchorpoints)
colnames(aa)<-c("X","Y")
s<-model$solutions
s<-as.data.frame(s)
colnames(s)<-c("lambda1", "lambda2", "phi", "sigma")
g<-cbind(aa,s)
newpoints <- data.frame(X = double(), Y = double())
for (i in 1:dim(g)[1])
{
#newpoints<-rbind(newpoints, c(g$X[i]+a$width/2, g$Y[i]))
#newpoints<-rbind(newpoints, c(g$X[i]-a$width/2, g$Y[i]))
#newpoints<-rbind(newpoints, c(g$X[i], g$Y[i]+a$height/2))
#newpoints<-rbind(newpoints, c(g$X[i], g$Y[i]-a$height/2))
newpoints<-rbind(newpoints, c(g$X[i]+a$width/sqrt(2), g$Y[i]+a$height/sqrt(2)))
newpoints<-rbind(newpoints, c(g$X[i]+a$width/sqrt(2), g$Y[i]-a$height/sqrt(2)))
newpoints<-rbind(newpoints, c(g$X[i]-a$width/sqrt(2), g$Y[i]+a$height/sqrt(2)))
newpoints<-rbind(newpoints, c(g$X[i]-a$width/sqrt(2), g$Y[i]-a$height/sqrt(2)))
}
colnames(newpoints)<-c("X","Y")
parameters<-smoothing(model$solutions,a$anchorpoints,model$delta,as.matrix(newpoints))
parameters<-as.data.frame(parameters)
colnames(parameters)<-c("lambda1", "lambda2", "phi", "sigma")
allpoints<-cbind(newpoints, parameters)
#allpoints<-rbind(g, newpos)
###DATI INIZIALI
dd <- as.data.frame(d)
#windows()
#p <- ggplot(dd, aes(x=V1, y=V2, color=y)) + geom_point() + scale_color_gradientn(colours = rainbow(5)) + coord_fixed()
#print(p)
par(ask=TRUE)
p <- ggplot(dd, aes(x=V1, y=V2, size=y)) + geom_point() + labs(x="X", y="Y")
p <- p + labs(title = "Bubble plot of the initial data", fontface = 'bold')
print(p)
###ELLISSI
p <- ggplot(g, aes(x=X, y=Y)) + geom_ellipse(aes(x0 = X, y0 = Y, a = lambda1, b = lambda2, angle = phi), data = g) + coord_fixed()
print(p)
###PARAMETERS
p1 <- ggplot(allpoints, aes(x=X, y=Y, color=lambda1)) + geom_point() + scale_color_gradientn(colours = rainbow(5)) + coord_fixed()
p2 <- ggplot(allpoints, aes(x=X, y=Y, color=lambda2)) + geom_point() + scale_color_gradientn(colours = rainbow(5)) + coord_fixed()
p3 <- ggplot(allpoints, aes(x=X, y=Y, color=phi)) + geom_point() + scale_color_gradientn(colours = rainbow(5)) + coord_fixed()
p4 <- ggplot(allpoints, aes(x=X, y=Y, color=sigma)) + geom_point() + scale_color_gradientn(colours = rainbow(5)) + coord_fixed()
title <- ggdraw() + draw_label("Parameters", fontface='bold')
p <- plot_grid(p1,p2,p3,p4,labels="AUTO")
print(plot_grid(title, p, ncol=1, rel_heights=c(0.1, 1)))
###FUNCTION VALUES
predictedvalues<-predikt(y,d,model$anchorpoints,model$epsilon,model$delta,model$solutions,as.matrix(allpoints)[,1:2])
means <- ggplot(allpoints, aes(x=X, y=Y, color=predictedvalues$predictedmean)) + geom_point() + scale_color_gradientn(colours = rainbow(5)) + coord_fixed()
ys <- ggplot(allpoints, aes(x=X, y=Y, color=predictedvalues$ypredicted)) + geom_point() + scale_color_gradientn(colours = rainbow(5)) + coord_fixed()
means<-means+labs(color="mean")
ys<-ys+labs(color="y")
title <- ggdraw() + draw_label("Predicted mean and y", fontface='bold')
p <- plot_grid(means, ys, labels="AUTO")
print(plot_grid(title, p, ncol=1, rel_heights=c(0.1, 1)))
return(allpoints)
}
mmypoints <- plot.lsm(r,a,y,d)
plot.lsm<-function(model, a, y, d)
{
aa<-as.data.frame(a$anchorpoints)
colnames(aa)<-c("X","Y")
s<-model$solutions
s<-as.data.frame(s)
colnames(s)<-c("lambda1", "lambda2", "phi", "sigma")
g<-cbind(aa,s)
newpoints <- data.frame(X = double(), Y = double())
for (i in 1:dim(g)[1])
{
#newpoints<-rbind(newpoints, c(g$X[i]+a$width/2, g$Y[i]))
#newpoints<-rbind(newpoints, c(g$X[i]-a$width/2, g$Y[i]))
#newpoints<-rbind(newpoints, c(g$X[i], g$Y[i]+a$height/2))
#newpoints<-rbind(newpoints, c(g$X[i], g$Y[i]-a$height/2))
newpoints<-rbind(newpoints, c(g$X[i]+a$width/sqrt(2), g$Y[i]+a$height/sqrt(2)))
newpoints<-rbind(newpoints, c(g$X[i]+a$width/sqrt(2), g$Y[i]-a$height/sqrt(2)))
newpoints<-rbind(newpoints, c(g$X[i]-a$width/sqrt(2), g$Y[i]+a$height/sqrt(2)))
newpoints<-rbind(newpoints, c(g$X[i]-a$width/sqrt(2), g$Y[i]-a$height/sqrt(2)))
}
colnames(newpoints)<-c("X","Y")
parameters<-smoothing(model$solutions,a$anchorpoints,model$delta,as.matrix(newpoints))
parameters<-as.data.frame(parameters)
colnames(parameters)<-c("lambda1", "lambda2", "phi", "sigma")
allpoints<-cbind(newpoints, parameters)
#allpoints<-rbind(g, newpos)
###DATI INIZIALI
dd <- as.data.frame(d)
#windows()
#p <- ggplot(dd, aes(x=V1, y=V2, color=y)) + geom_point() + scale_color_gradientn(colours = rainbow(5)) + coord_fixed()
#print(p)
par(ask=TRUE)
p <- ggplot(dd, aes(x=V1, y=V2, size=y)) + geom_point() + labs(x="X", y="Y")
p <- p + labs(title = "Bubble plot of the initial data", fontface = 'bold')
print(p)
###ELLISSI
p <- ggplot(g, aes(x=X, y=Y)) + geom_ellipse(aes(x0 = X, y0 = Y, a = lambda1, b = lambda2, angle = phi), data = g) + coord_fixed()
print(p)
###PARAMETERS
p1 <- ggplot(allpoints, aes(x=X, y=Y, color=lambda1)) + geom_point() + scale_color_gradientn(colours = rainbow(5)) + coord_fixed()
p2 <- ggplot(allpoints, aes(x=X, y=Y, color=lambda2)) + geom_point() + scale_color_gradientn(colours = rainbow(5)) + coord_fixed()
p3 <- ggplot(allpoints, aes(x=X, y=Y, color=phi)) + geom_point() + scale_color_gradientn(colours = rainbow(5)) + coord_fixed()
p4 <- ggplot(allpoints, aes(x=X, y=Y, color=sigma)) + geom_point() + scale_color_gradientn(colours = rainbow(5)) + coord_fixed()
title <- ggdraw() + draw_label("Parameters", fontface='bold')
p <- plot_grid(p1,p2,p3,p4,labels=c("lambda1", "lambda2", "phi", "sigma"))
print(plot_grid(title, p, ncol=1, rel_heights=c(0.1, 1)))
###FUNCTION VALUES
predictedvalues<-predikt(y,d,model$anchorpoints,model$epsilon,model$delta,model$solutions,as.matrix(allpoints)[,1:2])
means <- ggplot(allpoints, aes(x=X, y=Y, color=predictedvalues$predictedmean)) + geom_point() + scale_color_gradientn(colours = rainbow(5)) + coord_fixed()
ys <- ggplot(allpoints, aes(x=X, y=Y, color=predictedvalues$ypredicted)) + geom_point() + scale_color_gradientn(colours = rainbow(5)) + coord_fixed()
means<-means+labs(color="mean")
ys<-ys+labs(color="f(.)")
title <- ggdraw() + draw_label("Predicted mean and f(.)", fontface='bold')
p <- plot_grid(means, ys, labels=c("mean", "f(.)"))
print(plot_grid(title, p, ncol=1, rel_heights=c(0.1, 1)))
return(allpoints)
}
mmypoints <- plot.lsm(r,a,y,d)
plot.lsm<-function(model, a, y, d)
{
aa<-as.data.frame(a$anchorpoints)
colnames(aa)<-c("X","Y")
s<-model$solutions
s<-as.data.frame(s)
colnames(s)<-c("lambda1", "lambda2", "phi", "sigma")
g<-cbind(aa,s)
newpoints <- data.frame(X = double(), Y = double())
for (i in 1:dim(g)[1])
{
#newpoints<-rbind(newpoints, c(g$X[i]+a$width/2, g$Y[i]))
#newpoints<-rbind(newpoints, c(g$X[i]-a$width/2, g$Y[i]))
#newpoints<-rbind(newpoints, c(g$X[i], g$Y[i]+a$height/2))
#newpoints<-rbind(newpoints, c(g$X[i], g$Y[i]-a$height/2))
newpoints<-rbind(newpoints, c(g$X[i]+a$width/sqrt(2), g$Y[i]+a$height/sqrt(2)))
newpoints<-rbind(newpoints, c(g$X[i]+a$width/sqrt(2), g$Y[i]-a$height/sqrt(2)))
newpoints<-rbind(newpoints, c(g$X[i]-a$width/sqrt(2), g$Y[i]+a$height/sqrt(2)))
newpoints<-rbind(newpoints, c(g$X[i]-a$width/sqrt(2), g$Y[i]-a$height/sqrt(2)))
}
colnames(newpoints)<-c("X","Y")
parameters<-smoothing(model$solutions,a$anchorpoints,model$delta,as.matrix(newpoints))
parameters<-as.data.frame(parameters)
colnames(parameters)<-c("lambda1", "lambda2", "phi", "sigma")
allpoints<-cbind(newpoints, parameters)
#allpoints<-rbind(g, newpos)
###DATI INIZIALI
dd <- as.data.frame(d)
#windows()
#p <- ggplot(dd, aes(x=V1, y=V2, color=y)) + geom_point() + scale_color_gradientn(colours = rainbow(5)) + coord_fixed()
#print(p)
par(ask=TRUE)
p <- ggplot(dd, aes(x=V1, y=V2, size=y)) + geom_point() + labs(x="X", y="Y")
p <- p + labs(title = "Bubble plot of the initial data", fontface = 'bold')
print(p)
###ELLISSI
p <- ggplot(g, aes(x=X, y=Y)) + geom_ellipse(aes(x0 = X, y0 = Y, a = lambda1, b = lambda2, angle = phi), data = g) + coord_fixed()
print(p)
###PARAMETERS
p1 <- ggplot(allpoints, aes(x=X, y=Y, color=lambda1)) + geom_point() + scale_color_gradientn(colours = rainbow(5)) + coord_fixed()
p2 <- ggplot(allpoints, aes(x=X, y=Y, color=lambda2)) + geom_point() + scale_color_gradientn(colours = rainbow(5)) + coord_fixed()
p3 <- ggplot(allpoints, aes(x=X, y=Y, color=phi)) + geom_point() + scale_color_gradientn(colours = rainbow(5)) + coord_fixed()
p4 <- ggplot(allpoints, aes(x=X, y=Y, color=sigma)) + geom_point() + scale_color_gradientn(colours = rainbow(5)) + coord_fixed()
title <- ggdraw() + draw_label("Parameters", fontface='bold')
p <- plot_grid(p1,p2,p3,p4)
print(plot_grid(title, p, ncol=1, rel_heights=c(0.1, 1)))
###FUNCTION VALUES
predictedvalues<-predikt(y,d,model$anchorpoints,model$epsilon,model$delta,model$solutions,as.matrix(allpoints)[,1:2])
means <- ggplot(allpoints, aes(x=X, y=Y, color=predictedvalues$predictedmean)) + geom_point() + scale_color_gradientn(colours = rainbow(5)) + coord_fixed()
ys <- ggplot(allpoints, aes(x=X, y=Y, color=predictedvalues$ypredicted)) + geom_point() + scale_color_gradientn(colours = rainbow(5)) + coord_fixed()
means<-means+labs(color="mean")
ys<-ys+labs(color="f(*)")
title <- ggdraw() + draw_label("Predicted mean and f(*)", fontface='bold')
p <- plot_grid(means, ys)
print(plot_grid(title, p, ncol=1, rel_heights=c(0.1, 1)))
return(allpoints)
}
mmypoints <- plot.lsm(r,a,y,d)
x11(height = 600, widtg = 800)
x11(height = 600, width = 800)
mmypoints <- plot.lsm(r,a,y,d)
plot.lsm<-function(model, a, y, d)
{
aa<-as.data.frame(a$anchorpoints)
colnames(aa)<-c("X","Y")
s<-model$solutions
s<-as.data.frame(s)
colnames(s)<-c("lambda1", "lambda2", "phi", "sigma")
g<-cbind(aa,s)
newpoints <- data.frame(X = double(), Y = double())
for (i in 1:dim(g)[1])
{
#newpoints<-rbind(newpoints, c(g$X[i]+a$width/2, g$Y[i]))
#newpoints<-rbind(newpoints, c(g$X[i]-a$width/2, g$Y[i]))
#newpoints<-rbind(newpoints, c(g$X[i], g$Y[i]+a$height/2))
#newpoints<-rbind(newpoints, c(g$X[i], g$Y[i]-a$height/2))
newpoints<-rbind(newpoints, c(g$X[i]+a$width/sqrt(2), g$Y[i]+a$height/sqrt(2)))
newpoints<-rbind(newpoints, c(g$X[i]+a$width/sqrt(2), g$Y[i]-a$height/sqrt(2)))
newpoints<-rbind(newpoints, c(g$X[i]-a$width/sqrt(2), g$Y[i]+a$height/sqrt(2)))
newpoints<-rbind(newpoints, c(g$X[i]-a$width/sqrt(2), g$Y[i]-a$height/sqrt(2)))
}
colnames(newpoints)<-c("X","Y")
parameters<-smoothing(model$solutions,a$anchorpoints,model$delta,as.matrix(newpoints))
parameters<-as.data.frame(parameters)
colnames(parameters)<-c("lambda1", "lambda2", "phi", "sigma")
allpoints<-cbind(newpoints, parameters)
#allpoints<-rbind(g, newpos)
###DATI INIZIALI
dd <- as.data.frame(d)
#windows()
#p <- ggplot(dd, aes(x=V1, y=V2, color=y)) + geom_point() + scale_color_gradientn(colours = rainbow(5)) + coord_fixed()
#print(p)
par(ask=TRUE)
p <- ggplot(dd, aes(x=V1, y=V2, size=y)) + geom_point() + labs(x="X", y="Y")
p <- p + labs(title = "Bubble plot of the initial data", fontface = 'bold')
print(p)
###ELLISSI
p <- ggplot(g, aes(x=X, y=Y)) + geom_ellipse(aes(x0 = X, y0 = Y, a = lambda1, b = lambda2, angle = phi), data = g) + coord_fixed()
print(p)
###PARAMETERS
p1 <- ggplot(allpoints, aes(x=X, y=Y, color=lambda1)) + geom_point() + scale_color_gradientn(colours = rainbow(5)) + coord_fixed()
p2 <- ggplot(allpoints, aes(x=X, y=Y, color=lambda2)) + geom_point() + scale_color_gradientn(colours = rainbow(5)) + coord_fixed()
p3 <- ggplot(allpoints, aes(x=X, y=Y, color=phi)) + geom_point() + scale_color_gradientn(colours = rainbow(5)) + coord_fixed()
p4 <- ggplot(allpoints, aes(x=X, y=Y, color=sigma)) + geom_point() + scale_color_gradientn(colours = rainbow(5)) + coord_fixed()
title <- ggdraw() + draw_label("Parameters", fontface='bold')
p <- plot_grid(p1,p2,p3,p4)
print(plot_grid(title, p, ncol=1, rel_heights=c(0.1, 1)))
###FUNCTION VALUES
predictedvalues<-predikt(y,d,model$anchorpoints,model$epsilon,model$delta,model$solutions,as.matrix(allpoints)[,1:2])
means <- ggplot(allpoints, aes(x=X, y=Y, color=predictedvalues$predictedmean)) + geom_point() + scale_color_gradientn(colours = rainbow(5)) + coord_fixed()
ys <- ggplot(allpoints, aes(x=X, y=Y, color=predictedvalues$ypredicted)) + geom_point() + scale_color_gradientn(colours = rainbow(5)) + coord_fixed()
means<-means+labs(color="mean") + theme_bw()
ys<-ys+labs(color="f(*)") + theme_bw()
title <- ggdraw() + draw_label("Predicted mean and f(*)", fontface='bold')
p <- plot_grid(means, ys)
print(plot_grid(title, p, ncol=1, rel_heights=c(0.1, 1)))
return(allpoints)
}
x11(height = 600, width = 800)
mmypoints <- plot.lsm(r,a,y,d)
ggplot(as.data.frame(d), aes(x=V1, y=V2, size=y)) + geom_point() + labs(x="X", y="Y")
ggplot(as.data.frame(d), aes(x=V1, y=V2, size=y)) + geom_point() + labs(x="X", y="Y") + theme_linedraw()
ggplot(as.data.frame(d), aes(x=V1, y=V2, size=y)) + geom_point() + labs(x="X", y="Y") + theme_classic()
ggplot(as.data.frame(d), aes(x=V1, y=V2, size=y)) + geom_point() + labs(x="X", y="Y") + theme_cowplot()
ggplot(as.data.frame(d), aes(x=V1, y=V2, size=y)) + geom_point() + labs(x="X", y="Y") + theme_map()
ggplot(as.data.frame(d), aes(x=V1, y=V2, size=y)) + geom_point() + labs(x="X", y="Y") + theme_grey()
ggplot(as.data.frame(d), aes(x=V1, y=V2, size=y)) + geom_point() + labs(x="X", y="Y") + theme_light()
plot.lsm<-function(model, a, y, d)
{
aa<-as.data.frame(a$anchorpoints)
colnames(aa)<-c("X","Y")
s<-model$solutions
s<-as.data.frame(s)
colnames(s)<-c("lambda1", "lambda2", "phi", "sigma")
g<-cbind(aa,s)
newpoints <- data.frame(X = double(), Y = double())
for (i in 1:dim(g)[1])
{
#newpoints<-rbind(newpoints, c(g$X[i]+a$width/2, g$Y[i]))
#newpoints<-rbind(newpoints, c(g$X[i]-a$width/2, g$Y[i]))
#newpoints<-rbind(newpoints, c(g$X[i], g$Y[i]+a$height/2))
#newpoints<-rbind(newpoints, c(g$X[i], g$Y[i]-a$height/2))
newpoints<-rbind(newpoints, c(g$X[i]+a$width/sqrt(2), g$Y[i]+a$height/sqrt(2)))
newpoints<-rbind(newpoints, c(g$X[i]+a$width/sqrt(2), g$Y[i]-a$height/sqrt(2)))
newpoints<-rbind(newpoints, c(g$X[i]-a$width/sqrt(2), g$Y[i]+a$height/sqrt(2)))
newpoints<-rbind(newpoints, c(g$X[i]-a$width/sqrt(2), g$Y[i]-a$height/sqrt(2)))
}
colnames(newpoints)<-c("X","Y")
parameters<-smoothing(model$solutions,a$anchorpoints,model$delta,as.matrix(newpoints))
parameters<-as.data.frame(parameters)
colnames(parameters)<-c("lambda1", "lambda2", "phi", "sigma")
allpoints<-cbind(newpoints, parameters)
#allpoints<-rbind(g, newpos)
###DATI INIZIALI
dd <- as.data.frame(d)
#windows()
#p <- ggplot(dd, aes(x=V1, y=V2, color=y)) + geom_point() + scale_color_gradientn(colours = rainbow(5)) + coord_fixed()
#print(p)
par(ask=TRUE)
p <- ggplot(dd, aes(x=V1, y=V2, size=y)) + geom_point() + labs(x="X", y="Y")
p <- p + labs(title = "Bubble plot of the initial data", fontface = 'bold')
print(p)
###ELLISSI
p <- ggplot(g, aes(x=X, y=Y)) + geom_ellipse(aes(x0 = X, y0 = Y, a = lambda1, b = lambda2, angle = phi), data = g) + coord_fixed()
print(p)
###PARAMETERS
p1 <- ggplot(allpoints, aes(x=X, y=Y, color=lambda1)) + geom_point() + scale_color_gradientn(colours = rainbow(5)) + coord_fixed()
p2 <- ggplot(allpoints, aes(x=X, y=Y, color=lambda2)) + geom_point() + scale_color_gradientn(colours = rainbow(5)) + coord_fixed()
p3 <- ggplot(allpoints, aes(x=X, y=Y, color=phi)) + geom_point() + scale_color_gradientn(colours = rainbow(5)) + coord_fixed()
p4 <- ggplot(allpoints, aes(x=X, y=Y, color=sigma)) + geom_point() + scale_color_gradientn(colours = rainbow(5)) + coord_fixed()
title <- ggdraw() + draw_label("Parameters", fontface='bold')
p <- plot_grid(p1,p2,p3,p4)
print(plot_grid(title, p, ncol=1, rel_heights=c(0.1, 1)))
###FUNCTION VALUES
predictedvalues<-predikt(y,d,model$anchorpoints,model$epsilon,model$delta,model$solutions,as.matrix(allpoints)[,1:2])
means <- ggplot(allpoints, aes(x=X, y=Y, color=predictedvalues$predictedmean)) + geom_point() + scale_color_gradientn(colours = rainbow(5)) + coord_fixed()
ys <- ggplot(allpoints, aes(x=X, y=Y, color=predictedvalues$ypredicted)) + geom_point() + scale_color_gradientn(colours = rainbow(5)) + coord_fixed()
means<-means+labs(color="mean")
ys<-ys+labs(color="f(*)")
title <- ggdraw() + draw_label("Predicted mean and f(*)", fontface='bold')
p <- plot_grid(means, ys)
print(plot_grid(title, p, ncol=1, rel_heights=c(0.1, 1)))
return(allpoints)
}
x11(height = 600, width = 800)
mmypoints <- plot.lsm(r,a,y,d)
plot.lsm<-function(model, a, y, d)
{
aa<-as.data.frame(a$anchorpoints)
colnames(aa)<-c("X","Y")
s<-model$solutions
s<-as.data.frame(s)
colnames(s)<-c("lambda1", "lambda2", "phi", "sigma")
g<-cbind(aa,s)
newpoints <- data.frame(X = double(), Y = double())
for (i in 1:dim(g)[1])
{
#newpoints<-rbind(newpoints, c(g$X[i]+a$width/2, g$Y[i]))
#newpoints<-rbind(newpoints, c(g$X[i]-a$width/2, g$Y[i]))
#newpoints<-rbind(newpoints, c(g$X[i], g$Y[i]+a$height/2))
#newpoints<-rbind(newpoints, c(g$X[i], g$Y[i]-a$height/2))
newpoints<-rbind(newpoints, c(g$X[i]+a$width/sqrt(2), g$Y[i]+a$height/sqrt(2)))
newpoints<-rbind(newpoints, c(g$X[i]+a$width/sqrt(2), g$Y[i]-a$height/sqrt(2)))
newpoints<-rbind(newpoints, c(g$X[i]-a$width/sqrt(2), g$Y[i]+a$height/sqrt(2)))
newpoints<-rbind(newpoints, c(g$X[i]-a$width/sqrt(2), g$Y[i]-a$height/sqrt(2)))
}
colnames(newpoints)<-c("X","Y")
parameters<-smoothing(model$solutions,a$anchorpoints,model$delta,as.matrix(newpoints))
parameters<-as.data.frame(parameters)
colnames(parameters)<-c("lambda1", "lambda2", "phi", "sigma")
allpoints<-cbind(newpoints, parameters)
#allpoints<-rbind(g, newpos)
###DATI INIZIALI
dd <- as.data.frame(d)
#windows()
#p <- ggplot(dd, aes(x=V1, y=V2, color=y)) + geom_point() + scale_color_gradientn(colours = rainbow(5)) + coord_fixed()
#print(p)
par(ask=TRUE)
p <- ggplot(dd, aes(x=V1, y=V2, size=y)) + geom_point() + labs(x="X", y="Y")
p <- p + labs(title = "Bubble plot of the initial data", fontface = 'bold') + theme_light()
print(p)
###ELLISSI
p <- ggplot(g, aes(x=X, y=Y)) + geom_ellipse(aes(x0 = X, y0 = Y, a = lambda1, b = lambda2, angle = phi), data = g) + coord_fixed() + theme_light()
print(p)
###PARAMETERS
p1 <- ggplot(allpoints, aes(x=X, y=Y, color=lambda1)) + geom_point() + scale_color_gradientn(colours = rainbow(5)) + coord_fixed() + theme_light()
p2 <- ggplot(allpoints, aes(x=X, y=Y, color=lambda2)) + geom_point() + scale_color_gradientn(colours = rainbow(5)) + coord_fixed() + theme_light()
p3 <- ggplot(allpoints, aes(x=X, y=Y, color=phi)) + geom_point() + scale_color_gradientn(colours = rainbow(5)) + coord_fixed() + theme_light()
p4 <- ggplot(allpoints, aes(x=X, y=Y, color=sigma)) + geom_point() + scale_color_gradientn(colours = rainbow(5)) + coord_fixed() + theme_light()
title <- ggdraw() + draw_label("Parameters", fontface='bold')
p <- plot_grid(p1,p2,p3,p4)
print(plot_grid(title, p, ncol=1, rel_heights=c(0.1, 1)))
###FUNCTION VALUES
predictedvalues<-predikt(y,d,model$anchorpoints,model$epsilon,model$delta,model$solutions,as.matrix(allpoints)[,1:2])
means <- ggplot(allpoints, aes(x=X, y=Y, color=predictedvalues$predictedmean)) + geom_point() + scale_color_gradientn(colours = rainbow(5)) + coord_fixed()
ys <- ggplot(allpoints, aes(x=X, y=Y, color=predictedvalues$ypredicted)) + geom_point() + scale_color_gradientn(colours = rainbow(5)) + coord_fixed()
means<-means+labs(color="mean") + theme_light()
ys<-ys+labs(color="f(*)") + theme_light()
title <- ggdraw() + draw_label("Predicted mean and f(*)", fontface='bold')
p <- plot_grid(means, ys)
print(plot_grid(title, p, ncol=1, rel_heights=c(0.1, 1)))
return(allpoints)
}
x11(height = 600, width = 800)
mmypoints <- plot.lsm(r,a,y,d)
library(LocallyStationaryModels)
f <- function(y, d, anchorpoints = find_anchorpoints(d, 30), parameters, epsilon, n_angles, n_intervals, kernel_id, variogram_id)
{
return rawmodel(y, d, anchorpoints, parameters, epsilon, n_angles, n_intervals, kernel_id, variogram_id)
}
f <- function(y, d, anchorpoints = find_anchorpoints(d, 30), parameters, epsilon, n_angles, n_intervals, kernel_id, variogram_id)
{
return (rawmodel(y, d, anchorpoints, parameters, epsilon, n_angles, n_intervals, kernel_id, variogram_id))
}
r<-rawmodel(y,d,a$anchorpoints,c(200,200,0.11,200),10000,8,8,"gaussian","esponenziale")
f(y,d,a$anchorpoints,c(200,200,0.11,200),10000,8,8,"gaussian","esponenziale")
a<-find_anchorpoints(d,30)
r<-rawmodel(y,d,a$anchorpoints,c(200,200,0.11,200),10000,8,8,"gaussian","esponenziale")
f(y,d,a$anchorpoints,c(200,200,0.11,200),10000,8,8,"gaussian","esponenziale")
f(y,d,c(200,200,0.11,200),10000,8,8,"gaussian","esponenziale")
library(LocallyStationaryModels)
a<-find_anchorpoints(d,30)
r<-rawmodel(y,d,a$anchorpoints,c(200,200,0.11,200),10000,8,8,"gaussian","esponenziale")
library(sp)
data("meuse")
y<-meuse$cadmium
a<-find_anchorpoints(d,30)
r<-rawmodel(y,d,a$anchorpoints,c(200,200,0.11,200),500,8,8,"gaussian","esponenziale")
x11(height = 600, width = 800)
mmypoints <- plot.lsm(r,a,y,d)
library(ggforce)
library(cowplot)
mmypoints <- plot.lsm(r,a,y,d)
library(LocallyStationaryModels)
library(LocallyStationaryModels)
library(LocallyStationaryModels)
library(ggforce)
library(cowplot)
library(sp)           ## Data management
data(meuse)
y<-meuse$cadmium
a<-find_anchorpoints(d,40)
###IN ALTERNATIVA (DA SISTEMARE)
vario<-variogramlsm(y,d,a$anchorpoints,350,8,8,"gaussian")
solu<-findsolutions.lsm(vario, "esponenziale", c(200,200,0.01,100))
solu<-findsolutions.lsm(vario, "esponenziale", c(200,200,0.01,100))
###IN ALTERNATIVA (DA SISTEMARE)
vario<-variogramlsm(y,d,a$anchorpoints,350,8,8,"gaussian")
library(LocallyStationaryModels)
library(ggforce)
library(cowplot)
library(sp)           ## Data management
data(meuse)
y<-meuse$cadmium
a<-find_anchorpoints(d,40)
r<-rawmodel(y,d,a$anchorpoints,c(200,200,0.01,100),350,8,8,"gaussian","esponenziale")
a<-find_anchorpoints(d,30)
r<-rawmodel(y,d,a$anchorpoints,c(200,200,0.01,100),350,8,8,"gaussian","esponenziale")
r<-rawmodel(y,d,a$anchorpoints,c(200,200,0.01,100),350,8,8,"gaussian","esponenziale")
x11(height = 600, width = 800, ypos = -100, xpos = -100)
###IN ALTERNATIVA (DA SISTEMARE)
vario<-variogramlsm(y,d,a$anchorpoints,350,8,8,"gaussian")
solu<-findsolutions.lsm(vario, "esponenziale", c(200,200,0.01,100))
solu<-findsolutions.lsm(vario, "esponenziale", c(200,200,0.01,100))
solu<-findsolutions.lsm(vario, "esponenziale", c(200,200,0.01,100))
###IN ALTERNATIVA (DA SISTEMARE)
vario<-variogramlsm(y,d,a$anchorpoints,350,8,8,"gaussian")
solu<-findsolutions.lsm(vario, "esponenziale", c(200,200,0.01,100))
previsions <- predict.lsm(solu, d, y, d)
a<-find_anchorpoints(d,40)
###IN ALTERNATIVA (DA SISTEMARE)
vario<-variogramlsm(y,d,a$anchorpoints,350,8,8,"gaussian")
solu<-findsolutions.lsm(vario, "esponenziale", c(200,200,0.01,100))
x11(height = 600, width = 800, ypos = -100, xpos = -100)
mypoints<-plot.lsm(solu,a,y,d)
previsions
solu$solutions
library(LocallyStationaryModels)
library(ggforce)
library(cowplot)
library(sp)           ## Data management
data(meuse)
y<-meuse$cadmium
a<-find_anchorpoints(d,40)
###IN ALTERNATIVA (DA SISTEMARE)
vario<-variogramlsm(y,d,a$anchorpoints,350,8,8,"gaussian")
solu<-findsolutions.lsm(vario, "esponenziale", c(200,200,0.01,100))
solu$solutions
###IN ALTERNATIVA (DA SISTEMARE)
vario<-variogramlsm(y,d,a$anchorpoints,350,8,8,"gaussian")
solu<-findsolutions.lsm(vario, "esponenziale", c(200,200,0.01,100), FALSE)
solu$solutions
