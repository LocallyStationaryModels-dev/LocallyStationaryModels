# Find the solutions
solu <- findsolutions.lsm(vario, "exponential", c(200,200,0.01,100))
solu
mypoints<-plot.lsm(model = solu, a = a, y = y, d = d, n_points = 10, points_arrangement = "random")
previsions <- predict.lsm(solu, d, y, d)
max(previsions$ypredicted - y)
library(LocallyStationaryModels)
library(LocallyStationaryModels)
# Clean the environment
rm(list = ls())
# Load the libraries
library(LocallyStationaryModels)
library(sp)           ## Data management
# Load the data
data(meuse)
d <- cbind(meuse$x, meuse$y)
y <- meuse$elev
# Find anchorpoints
a <- find_anchorpoints.lsm(d,12)
# Build the empiric variogram
vario <- variogram.lsm(y,d,a$anchorpoints,370,8,8,"gaussian")
# Find the solutions
solu <- findsolutions.lsm(vario, "exponential", c(200,200,0.01,100))
solu
mypoints<-plot.lsm(model = solu, a = a, y = y, d = d, n_points = 10, points_arrangement = "random")
previsions <- predict.lsm(solu, d, y, d)
max(previsions$ypredicted - y)
library(LocallyStationaryModels)
library(LocallyStationaryModels)
# Clean the environment
rm(list = ls())
# Load the libraries
library(LocallyStationaryModels)
library(sp)           ## Data management
# Load the data
data(meuse)
d <- cbind(meuse$x, meuse$y)
y <- meuse$elev
# Find anchorpoints
a <- find_anchorpoints.lsm(d,12)
# Build the empiric variogram
vario <- variogram.lsm(y,d,a$anchorpoints,370,8,8,"gaussian")
# Find the solutions
solu <- findsolutions.lsm(vario, "exponential", c(200,200,0.01,100))
solu
mypoints<-plot.lsm(model = solu, a = a, y = y, d = d, n_points = 10, points_arrangement = "random")
previsions <- predict.lsm(solu, d, y, d)
sions
max(previsions$ypredicted - y)
# Test the performace of our model via cross-validation
cv.lsm(y,d,a$anchorpoints,350,8,8,"gaussian","exponential", c(200,200,0.01,100))
y<-sic.all$data
# Load the data
load("C:/Users/luca9/Downloads/SIC.rda")
y<-sic.all$data
V1<-as.numeric(sic.all$coords[,1])
V2<-as.numeric(sic.all$coords[,2])
d <- cbind(V1, V2)
# Find anchorpoints
a <- find_anchorpoints.lsm(d,8)
# Build the empiric variogram
vario <- variogram.lsm(y,d,a$anchorpoints,46*2,6,15,"gaussian")
# Find the solutions
solu <- findsolutions.lsm(vario, "exponential", c(20,100,0.51,100),upper.bound = c(Inf,Inf,pi/2,250))
solu
plotvario(6,15,vario$empiricvariogram,34,46*2)
mypoints<-plot.lsm(model = solu, a = a, y = y, d = d, n_points = 10, points_arrangement = "random", n_threads = 4)
previsions <- predict.lsm(solu, d, y, d, n_threads = 4)
# Find the solutions
solu <- findsolutions.lsm(vario, "exponential", c(200,200,0.01,100))
# Find anchorpoints
a <- find_anchorpoints.lsm(d,12)
vario <- variogram.lsm(y,d,a$anchorpoints,370,8,8,"gaussian")
# Find the solutions
solu <- findsolutions.lsm(vario, "exponential", c(200,200,0.01,100))
# Clean the environment
rm(list = ls())
# Load the libraries
library(LocallyStationaryModels)
library(sp)           ## Data management
# Load the data
data(meuse)
d <- cbind(meuse$x, meuse$y)
y <- meuse$elev
# Find anchorpoints
a <- find_anchorpoints.lsm(d,12)
vario <- variogram.lsm(y,d,a$anchorpoints,370,8,8,"gaussian")
# Find the solutions
solu <- findsolutions.lsm(vario, "exponential", c(200,200,0.01,100))
solu
previsions <- predict.lsm(solu, d, y, d, n_threads = 10)
# Clean the environment
rm(list = ls())
# Load the libraries
library(LocallyStationaryModels)
library(sp)           ## Data management
# Load the data
data(meuse)
d <- cbind(meuse$x, meuse$y)
y <- meuse$elev
# Find anchorpoints
a <- find_anchorpoints.lsm(d,12)
# Build the empiric variogram
vario <- variogram.lsm(y,d,a$anchorpoints,370,8,8,"gaussian")
# Find the solutions
solu <- findsolutions.lsm(vario, "exponential", c(200,200,0.01,100))
solu
# Plot of the solutions
x11()
previsions <- predict.lsm(solu, d, y, d, n_threads = 10)
previsions <- predict.lsm(solu, d, y, d, n_threads = 12)
# Clean the environment
rm(list = ls())
# Load the libraries
library(LocallyStationaryModels)
library(sp)           ## Data management
# Load the data
data(meuse)
d <- cbind(meuse$x, meuse$y)
y <- meuse$elev
# Find anchorpoints
a <- find_anchorpoints.lsm(d,12)
# Build the empiric variogram
vario <- variogram.lsm(y,d,a$anchorpoints,370,8,8,"gaussian")
# Find the solutions
solu <- findsolutions.lsm(vario, "exponential", c(200,200,0.01,100))
mypoints<-plot.lsm(model = solu, a = a, y = y, d = d, n_points = 10, points_arrangement = "random")
previsions <- predict.lsm(solu, d, y, d, n_threads = 12)
max(previsions$ypredicted - y)
# Clean the environment
rm(list = ls())
# Load the libraries
library(LocallyStationaryModels)
library(sp)           ## Data management
library(LocallyStationaryModels)
# Load the data
data(meuse)
d <- cbind(meuse$x, meuse$y)
y <- meuse$elev
# Find anchorpoints
a <- find_anchorpoints.lsm(d,12)
# Build the empiric variogram
vario <- variogram.lsm(y,d,a$anchorpoints,370,8,8,"gaussian")
# Find the solutions
solu <- findsolutions.lsm(vario, "exponential", c(200,200,0.01,100))
mypoints<-plot.lsm(model = solu, a = a, y = y, d = d, n_points = 10, points_arrangement = "random")
library(LocallyStationaryModels)
# Clean the environment
rm(list = ls())
# Load the libraries
library(LocallyStationaryModels)
library(sp)           ## Data management
# Load the data
data(meuse)
d <- cbind(meuse$x, meuse$y)
y <- meuse$elev
# Find anchorpoints
a <- find_anchorpoints.lsm(d,12)
# Build the empiric variogram
vario <- variogram.lsm(y,d,a$anchorpoints,370,8,8,"gaussian")
# Find the solutions
solu <- findsolutions.lsm(vario, "exponential", c(200,200,0.01,100))
solu
# Build the empiric variogram
vario <- variogram.lsm(y,d,a$anchorpoints,370,8,8,"gaussian")
# Find the solutions
solu <- findsolutions.lsm(vario, "exponential", c(200,200,0.01,100))
solu
mypoints<-plot.lsm(model = solu, a = a, y = y, d = d, n_points = 10, points_arrangement = "random")
previsions <- predict.lsm(solu, d, y, d)
max(previsions$ypredicted - y)
clear
# Clean the environment
rm(list = ls())
# Load the libraries
library(LocallyStationaryModels)
library(sp)           ## Data management
# Load the data
data(meuse)
d <- cbind(meuse$x, meuse$y)
y <- meuse$elev
# Find anchorpoints
a <- find_anchorpoints.lsm(d,12)
# Build the empiric variogram
vario <- variogram.lsm(y,d,a$anchorpoints,370,8,8,"gaussian")
# Build the empiric variogram
vario <- variogram.lsm(y,d,a$anchorpoints,370,8,8,"gaussian")
# Find the solutions
solu <- findsolutions.lsm(vario, "exponential", c(200,200,0.01,100))
mypoints<-plot.lsm(model = solu, a = a, y = y, d = d, n_points = 10, points_arrangement = "random")
mypoints<-plot.lsm(model = solu, a = a, y = y, d = d, n_points = 10, points_arrangement = "random")
x11()
mypoints<-plot.lsm(model = solu, a = a, y = y, d = d, n_points = 10, points_arrangement = "random")
mypoints<-plot.lsm(model = solu, a = a, y = y, d = d, n_points = 10, points_arrangement = "random")
library(LocallyStationaryModels)
mypoints<-plot.lsm(model = solu, a = a, y = y, d = d, n_points = 10, points_arrangement = "random")
library(LocallyStationaryModels)
mypoints<-plot.lsm(model = solu, a = a, y = y, d = d, n_points = 10, points_arrangement = "random")
library(LocallyStationaryModels)
# Clean the environment
rm(list = ls())
# Load the libraries
library(LocallyStationaryModels)
library(sp)           ## Data management
# Load the data
data(meuse)
d <- cbind(meuse$x, meuse$y)
y <- meuse$elev
# Find anchorpoints
a <- find_anchorpoints.lsm(d,12)
# Build the empiric variogram
vario <- variogram.lsm(y,d,a$anchorpoints,370,8,8,"gaussian")
# Find the solutions
solu <- findsolutions.lsm(vario, "exponential", c(200,200,0.01,100))
mypoints<-plot.lsm(model = solu, a = a, y = y, d = d, n_points = 10, points_arrangement = "random")
previsions <- predict.lsm(solu, d, y, d)
max(previsions$ypredicted - y)
library(LocallyStationaryModels)
# Clean the environment
rm(list = ls())
# Load the libraries
library(LocallyStationaryModels)
library(sp)           ## Data management
# Load the data
data(meuse)
d <- cbind(meuse$x, meuse$y)
y <- meuse$elev
# Find anchorpoints
a <- find_anchorpoints.lsm(d,12)
# Build the empiric variogram
vario <- variogram.lsm(y,d,a$anchorpoints,370,8,8,"gaussian")
# Find the solutions
solu <- findsolutions.lsm(vario, "exponential", c(200,200,0.01,100))
solu
mypoints<-plot.lsm(model = solu, a = a, y = y, d = d, n_points = 10, points_arrangement = "random")
mypoints<-plot.lsm(model = solu, a = a, z = y, d = d, n_points = 10, points_arrangement = "random")
previsions <- predict.lsm(solu, d, y, d)
max(previsions$zpredicted - y)
mypoints<-plot.lsm(model = solu, a = a, y = y, d = d, n_points = 10, points_arrangement = "random")
mypoints<-plot.lsm(model = solu, a = a, z = y, d = d, n_points = 10, points_arrangement = "random")
<-
previsions <- predict.lsm(solu, d, y, d)
library(LocallyStationaryModels)
mypoints<-plot.lsm(model = solu, a = a, y = y, d = d, n_points = 10, points_arrangement = "random")
mypoints<-plot.lsm(model = solu, a = a, z = y, d = d, n_points = 10, points_arrangement = "random")
library(LocallyStationaryModels)
# Clean the environment
rm(list = ls())
# Load the libraries
library(LocallyStationaryModels)
library(sp)           ## Data management
# Load the data
data(meuse)
d <- cbind(meuse$x, meuse$y)
y <- meuse$elev
# Find anchorpoints
a <- find_anchorpoints.lsm(d,12)
# Build the empiric variogram
vario <- variogram.lsm(y,d,a$anchorpoints,370,8,8,"gaussian")
# Find the solutions
solu <- findsolutions.lsm(vario, "exponential", c(200,200,0.01,100))
solu
mypoints<-plot.lsm(model = solu, a = a, y = y, d = d, n_points = 10, points_arrangement = "random")
mypoints<-plot.lsm(model = solu, a = a, z = y, d = d, n_points = 10, points_arrangement = "random")
previsions <- predict.lsm(solu, d, y, d)
max(previsions$zpredicted - y)
library(LocallyStationaryModels)
# Clean the environment
rm(list = ls())
# Load the libraries
library(LocallyStationaryModels)
library(sp)           ## Data management
# Load the data
data(meuse)
d <- cbind(meuse$x, meuse$y)
y <- meuse$elev
# Find anchorpoints
a <- find_anchorpoints.lsm(d,12)
# Build the empiric variogram
vario <- variogram.lsm(y,d,a$anchorpoints,370,8,8,"gaussian")
# Find the solutions
solu <- findsolutions.lsm(vario, "exponential", c(200,200,0.01,100))
mypoints<-plot.lsm(model = solu, a = a, y = y, d = d, n_points = 10, points_arrangement = "random")
mypoints<-plot.lsm(model = solu, a = a, z = y, d = d, n_points = 10, points_arrangement = "random")
previsions <- predict.lsm(solu, d, y, d)
max(previsions$zpredicted - y)
mypoints<-plot.lsm(model = solu, a = a, z = y, d = d, n_points = 10, points_arrangement = "random")
library(LocallyStationaryModels)
# Clean the environment
rm(list = ls())
# Load the libraries
library(LocallyStationaryModels)
library(sp)           ## Data management
# Load the data
data(meuse)
d <- cbind(meuse$x, meuse$y)
y <- meuse$elev
# Find anchorpoints
a <- find_anchorpoints.lsm(d,12)
# Build the empiric variogram
vario <- variogram.lsm(y,d,a$anchorpoints,370,8,8,"gaussian")
# Find the solutions
solu <- findsolutions.lsm(vario, "exponential", c(200,200,0.01,100))
mypoints
mypoints<-plot.lsm(model = solu, a = a, y = y, d = d, n_points = 10, points_arrangement = "random")
mypoints<-plot.lsm(model = solu, a = a, z = y, d = d, n_points = 10, points_arrangement = "random")
previsions <- predict.lsm(solu, d, y, d)
max(previsions$zpredicted - y)
# Clean the environment
rm(list = ls())
library(LocallyStationaryModels)
# Load the libraries
library(LocallyStationaryModels)
library(sp)           ## Data management
# Load the data
data(meuse)
d <- cbind(meuse$x, meuse$y)
y <- meuse$elev
# Find anchorpoints
a <- find_anchorpoints.lsm(d,12)
library(LocallyStationaryModels)
# Clean the environment
rm(list = ls())
# Load the libraries
library(LocallyStationaryModels)
library(sp)           ## Data management
# Load the data
data(meuse)
d <- cbind(meuse$x, meuse$y)
y <- meuse$elev
# Find anchorpoints
a <- find_anchorpoints.lsm(d,12)
library(LocallyStationaryModels)
# Clean the environment
rm(list = ls())
# Load the libraries
library(LocallyStationaryModels)
library(sp)           ## Data management
# Load the data
data(meuse)
d <- cbind(meuse$x, meuse$y)
y <- meuse$elev
# Find anchorpoints
a <- find_anchorpoints.lsm(d,12)
# Clean the environment
rm(list = ls())
# Load the libraries
library(LocallyStationaryModels)
library(sp)           ## Data management
# Load the data
data(meuse)
d <- cbind(-meuse$x, -meuse$y)
y <- meuse$elev
# Find anchorpoints
a <- find_anchorpoints.lsm(d,12)
library(LocallyStationaryModels)
# Clean the environment
rm(list = ls())
# Load the libraries
library(LocallyStationaryModels)
library(sp)           ## Data management
# Load the data
data(meuse)
d <- cbind(meuse$x, meuse$y)
y <- meuse$elev
# Find anchorpoints
a <- find_anchorpoints.lsm(d,12)
# Build the empiric variogram
vario <- variogram.lsm(y,d,a$anchorpoints,370,8,8,"gaussian")
# Clean the environment
rm(list = ls())
# Load the libraries
library(LocallyStationaryModels)
library(sp)           ## Data management
# Load the data
data(meuse)
d <- cbind(meuse$x, meuse$y)
y <- meuse$elev
# Find anchorpoints
a <- find_anchorpoints.lsm(d,12)
# Build the empiric variogram
vario <- variogram.lsm(y,d,a$anchorpoints,370,8,8,"gaussian")
# Find the solutions
solu <- findsolutions.lsm(vario, "exponential", c(200,200,0.01,100))
solu
mypoints<-plot.lsm(model = solu, a = a, y = y, d = d, n_points = 10, points_arrangement = "random")
mypoints<-plot.lsm(model = solu, a = a, z= y, d = d, n_points = 10, points_arrangement = "random")
mypoints<-plot.lsm(model = solu, a = a, z = y, d = d, n_points = 10, points_arrangement = "random", bool = FALSE)
library(LocallyStationaryModels)
# Clean the environment
rm(list = ls())
# Load the libraries
library(LocallyStationaryModels)
library(sp)           ## Data management
# Load the data
data(meuse)
d <- cbind(meuse$x, meuse$y)
y <- meuse$elev
# Find anchorpoints
a <- find_anchorpoints.lsm(d,12)
# Build the empiric variogram
vario <- variogram.lsm(y,d,a$anchorpoints,370,8,8,"gaussian")
# Find the solutions
solu <- findsolutions.lsm(vario, "exponential", c(200,200,0.01,100))
mypoints<-plot.lsm(model = solu, a = a, z = y, d = d, n_points = 10, points_arrangement = "random", bool = FALSE)
mypoints<-plot.lsm(model = solu, a = a, z = y, d = d, n_points = 10, points_arrangement = "random", bool = TRUE)
library(LocallyStationaryModels)
# Clean the environment
rm(list = ls())
# Load the libraries
library(LocallyStationaryModels)
library(sp)           ## Data management
# Load the data
data(meuse)
d <- cbind(meuse$x, meuse$y)
y <- meuse$elev
# Find anchorpoints
a <- find_anchorpoints.lsm(d,12)
# Build the empiric variogram
vario <- variogram.lsm(y,d,a$anchorpoints,370,8,8,"gaussian")
# Clean the environment
rm(list = ls())
# Load the libraries
library(LocallyStationaryModels)
library(sp)           ## Data management
# Load the data
data(meuse)
d <- cbind(-meuse$x, -meuse$y)
y <- meuse$elev
# Find anchorpoints
a <- find_anchorpoints.lsm(d,12)
library(LocallyStationaryModels)
# Clean the environment
rm(list = ls())
# Load the libraries
library(LocallyStationaryModels)
library(sp)           ## Data management
# Load the data
data(meuse)
d <- cbind(meuse$x, meuse$y)
y <- meuse$elev
# Find anchorpoints
a <- find_anchorpoints.lsm(d,12)
# Build the empiric variogram
vario <- variogram.lsm(y,d,a$anchorpoints,370,8,8,"gaussian")
# Find the solutions
solu <- findsolutions.lsm(vario, "exponential", c(200,200,0.01,100))
solu
# Plot of the solutions
x11()
mypoints<-plot.lsm(model = solu, a = a, z = y, d = d, n_points = 10, points_arrangement = "straight", bool = FALSE)
# Plot of the solutions
x11()
mypoints<-plot.lsm(model = solu, a = a, z = y, d = d, n_points = 4, points_arrangement = "straight", bool = FALSE)
library(LocallyStationaryModels)
# Clean the environment
rm(list = ls())
# Load the libraries
library(LocallyStationaryModels)
library(sp)           ## Data management
# Load the data
data(meuse)
d <- cbind(meuse$x, meuse$y)
y <- meuse$elev
# Find anchorpoints
a <- find_anchorpoints.lsm(d,12)
# Build the empiric variogram
vario <- variogram.lsm(y,d,a$anchorpoints,370,8,8,"gaussian")
# Find the solutions
solu <- findsolutions.lsm(vario, "exponential", c(200,200,0.01,100))
# Plot of the solutions
x11()
mypoints<-plot.lsm(model = solu, a = a, z = y, d = d, n_points = 4, points_arrangement = "straight", bool = FALSE)
library(LocallyStationaryModels)
# Plot of the solutions
x11()
mypoints<-plot.lsm(model = solu, a = a, z = y, d = d, n_points = 4, points_arrangement = "straight", bool = FALSE)
library(LocallyStationaryModels)
# Plot of the solutions
x11()
mypoints<-plot.lsm(model = solu, a = a, z = y, d = d, n_points = 4, points_arrangement = "straight", bool = FALSE)
# Plot of the solutions
x11()
mypoints<-plot.lsm(model = solu, a = a, z = y, d = d, n_points = 6, points_arrangement = "straight", bool = FALSE)
# Plot of the solutions
x11()
mypoints<-plot.lsm(model = solu, a = a, z = y, d = d, n_points = 8, points_arrangement = "straight", bool = FALSE)
# Plot of the solutions
x11()
mypoints<-plot.lsm(model = solu, a = a, z = y, d = d, n_points = 10, points_arrangement = "straight", bool = FALSE)
library(LocallyStationaryModels)
library(LocallyStationaryModels)
# Clean the environment
rm(list = ls())
# Load the libraries
library(LocallyStationaryModels)
library(sp)           ## Data management
# Load the data
data(meuse)
d <- cbind(meuse$x, meuse$y)
y <- meuse$elev
# Find anchorpoints
a <- find_anchorpoints.lsm(d,12)
# Build the empiric variogram
vario <- variogram.lsm(y,d,a$anchorpoints,370,8,8,"gaussian")
# Find the solutions
solu <- findsolutions.lsm(vario, "exponential", c(200,200,0.01,100))
solu
# Plot of the solutions
x11()
previsions <- predict.lsm(solu, d, y, d)
max(previsions$zpredicted - y)
