#p <- ggplot(dd, aes(x=V1, y=V2, color=y)) + geom_point() + scale_color_gradientn(colours = rainbow(5)) + coord_fixed()
#print(p)
x11(ypos=-100, xpos=-100)
p <- ggplot(dd, aes(x=V1, y=V2, size=y)) + geom_point()
print(p)
###ELLISSI
x11(ypos=-100,xpos=-100)
p <- ggplot(g, aes(x=latitude, y=longitude)) + geom_ellipse(aes(x0 = latitude, y0 = longitude, a = lambda1, b = lambda2, angle = phi), data = g) + coord_fixed()
print(p)
###PARAMETERS
x11(height=600, width=600, ypos=-100,xpos=-100)
p1 <- ggplot(allpoints, aes(x=latitude, y=longitude, color=lambda1)) + geom_point() + scale_color_gradientn(colours = rainbow(5)) + coord_fixed()
p2 <- ggplot(allpoints, aes(x=latitude, y=longitude, color=lambda2)) + geom_point() + scale_color_gradientn(colours = rainbow(5)) + coord_fixed()
p3 <- ggplot(allpoints, aes(x=latitude, y=longitude, color=phi)) + geom_point() + scale_color_gradientn(colours = rainbow(5)) + coord_fixed()
p4 <- ggplot(allpoints, aes(x=latitude, y=longitude, color=sigma)) + geom_point() + scale_color_gradientn(colours = rainbow(5)) + coord_fixed()
print(plot_grid(p1,p2,p3,p4,labels="AUTO"))
###FUNCTION VALUES
predictedvalues<-predikt(y,d,model$anchorpoints,model$epsilon,model$delta,model$solutions,as.matrix(allpoints)[,1:2])
x11(ypos=-100, xpos=-100)
p <- ggplot(allpoints, aes(x=latitude, y=longitude, size=predictedvalues$predictedmean)) + geom_point()
print(p)
}
plot.lsm(r,a,y,d)
plot.lsm<-function(model, a, y, d)
{
aa<-as.data.frame(a$anchorpoints)
colnames(aa)<-c("latitude","longitude")
s<-model$solutions
s<-as.data.frame(s)
colnames(s)<-c("lambda1", "lambda2", "phi", "sigma")
g<-cbind(aa,s)
newpoints <- data.frame(latitude = double(), longitude = double())
for (i in 1:dim(g)[1])
{
#newpoints<-rbind(newpoints, c(g$latitude[i]+a$width/2, g$longitude[i]))
#newpoints<-rbind(newpoints, c(g$latitude[i]-a$width/2, g$longitude[i]))
#newpoints<-rbind(newpoints, c(g$latitude[i], g$longitude[i]+a$height/2))
#newpoints<-rbind(newpoints, c(g$latitude[i], g$longitude[i]-a$height/2))
newpoints<-rbind(newpoints, c(g$latitude[i]+a$width/sqrt(2), g$longitude[i]+a$height/sqrt(2)))
newpoints<-rbind(newpoints, c(g$latitude[i]+a$width/sqrt(2), g$longitude[i]-a$height/sqrt(2)))
newpoints<-rbind(newpoints, c(g$latitude[i]-a$width/sqrt(2), g$longitude[i]+a$height/sqrt(2)))
newpoints<-rbind(newpoints, c(g$latitude[i]-a$width/sqrt(2), g$longitude[i]-a$height/sqrt(2)))
}
colnames(newpoints)<-c("latitude","longitude")
parameters<-smoothing(model$solutions,a$anchorpoints,model$delta,as.matrix(newpoints))
parameters<-as.data.frame(parameters)
colnames(parameters)<-c("lambda1", "lambda2", "phi", "sigma")
newpos<-cbind(newpoints, parameters)
allpoints<-rbind(g, newpos)
###DATI INIZIALI
dd <- as.data.frame(d)
#windows()
#p <- ggplot(dd, aes(x=V1, y=V2, color=y)) + geom_point() + scale_color_gradientn(colours = rainbow(5)) + coord_fixed()
#print(p)
x11(ypos=-100, xpos=-100)
p <- ggplot(dd, aes(x=V1, y=V2, size=y)) + geom_point()
print(p)
###ELLISSI
x11(ypos=-100,xpos=-100)
p <- ggplot(g, aes(x=latitude, y=longitude)) + geom_ellipse(aes(x0 = latitude, y0 = longitude, a = lambda1, b = lambda2, angle = phi), data = g) + coord_fixed()
print(p)
###PARAMETERS
x11(height=600, width=600, ypos=-100,xpos=-100)
p1 <- ggplot(allpoints, aes(x=latitude, y=longitude, color=lambda1)) + geom_point() + scale_color_gradientn(colours = rainbow(5)) + coord_fixed()
p2 <- ggplot(allpoints, aes(x=latitude, y=longitude, color=lambda2)) + geom_point() + scale_color_gradientn(colours = rainbow(5)) + coord_fixed()
p3 <- ggplot(allpoints, aes(x=latitude, y=longitude, color=phi)) + geom_point() + scale_color_gradientn(colours = rainbow(5)) + coord_fixed()
p4 <- ggplot(allpoints, aes(x=latitude, y=longitude, color=sigma)) + geom_point() + scale_color_gradientn(colours = rainbow(5)) + coord_fixed()
print(plot_grid(p1,p2,p3,p4,labels="AUTO"))
###FUNCTION VALUES
predictedvalues<-predikt(y,d,model$anchorpoints,model$epsilon,model$delta,model$solutions,as.matrix(allpoints)[,1:2])
x11(ypos=-100, xpos=-100)
mean <- ggplot(allpoints, aes(x=latitude, y=longitude, color=predictedvalues$predictedmean)) + geom_point() + scale_color_gradientn(colours = rainbow(5)) + coord_fixed()
ys <- ggplot(allpoints, aes(x=latitude, y=longitude, color=predictedvalues$ypredicted)) + geom_point() + scale_color_gradientn(colours = rainbow(5)) + coord_fixed()
print(plot_grid(means, ys,labels="AUTO"))
}
plot.lsm(r,a,y,d)
plot.lsm<-function(model, a, y, d)
{
aa<-as.data.frame(a$anchorpoints)
colnames(aa)<-c("latitude","longitude")
s<-model$solutions
s<-as.data.frame(s)
colnames(s)<-c("lambda1", "lambda2", "phi", "sigma")
g<-cbind(aa,s)
newpoints <- data.frame(latitude = double(), longitude = double())
for (i in 1:dim(g)[1])
{
#newpoints<-rbind(newpoints, c(g$latitude[i]+a$width/2, g$longitude[i]))
#newpoints<-rbind(newpoints, c(g$latitude[i]-a$width/2, g$longitude[i]))
#newpoints<-rbind(newpoints, c(g$latitude[i], g$longitude[i]+a$height/2))
#newpoints<-rbind(newpoints, c(g$latitude[i], g$longitude[i]-a$height/2))
newpoints<-rbind(newpoints, c(g$latitude[i]+a$width/sqrt(2), g$longitude[i]+a$height/sqrt(2)))
newpoints<-rbind(newpoints, c(g$latitude[i]+a$width/sqrt(2), g$longitude[i]-a$height/sqrt(2)))
newpoints<-rbind(newpoints, c(g$latitude[i]-a$width/sqrt(2), g$longitude[i]+a$height/sqrt(2)))
newpoints<-rbind(newpoints, c(g$latitude[i]-a$width/sqrt(2), g$longitude[i]-a$height/sqrt(2)))
}
colnames(newpoints)<-c("latitude","longitude")
parameters<-smoothing(model$solutions,a$anchorpoints,model$delta,as.matrix(newpoints))
parameters<-as.data.frame(parameters)
colnames(parameters)<-c("lambda1", "lambda2", "phi", "sigma")
newpos<-cbind(newpoints, parameters)
allpoints<-rbind(g, newpos)
###DATI INIZIALI
dd <- as.data.frame(d)
#windows()
#p <- ggplot(dd, aes(x=V1, y=V2, color=y)) + geom_point() + scale_color_gradientn(colours = rainbow(5)) + coord_fixed()
#print(p)
x11(ypos=-100, xpos=-100)
p <- ggplot(dd, aes(x=V1, y=V2, size=y)) + geom_point()
print(p)
###ELLISSI
x11(ypos=-100,xpos=-100)
p <- ggplot(g, aes(x=latitude, y=longitude)) + geom_ellipse(aes(x0 = latitude, y0 = longitude, a = lambda1, b = lambda2, angle = phi), data = g) + coord_fixed()
print(p)
###PARAMETERS
x11(height=600, width=600, ypos=-100,xpos=-100)
p1 <- ggplot(allpoints, aes(x=latitude, y=longitude, color=lambda1)) + geom_point() + scale_color_gradientn(colours = rainbow(5)) + coord_fixed()
p2 <- ggplot(allpoints, aes(x=latitude, y=longitude, color=lambda2)) + geom_point() + scale_color_gradientn(colours = rainbow(5)) + coord_fixed()
p3 <- ggplot(allpoints, aes(x=latitude, y=longitude, color=phi)) + geom_point() + scale_color_gradientn(colours = rainbow(5)) + coord_fixed()
p4 <- ggplot(allpoints, aes(x=latitude, y=longitude, color=sigma)) + geom_point() + scale_color_gradientn(colours = rainbow(5)) + coord_fixed()
print(plot_grid(p1,p2,p3,p4,labels="AUTO"))
###FUNCTION VALUES
predictedvalues<-predikt(y,d,model$anchorpoints,model$epsilon,model$delta,model$solutions,as.matrix(allpoints)[,1:2])
x11(ypos=-100, xpos=-100)
means <- ggplot(allpoints, aes(x=latitude, y=longitude, color=predictedvalues$predictedmean)) + geom_point() + scale_color_gradientn(colours = rainbow(5)) + coord_fixed()
ys <- ggplot(allpoints, aes(x=latitude, y=longitude, color=predictedvalues$ypredicted)) + geom_point() + scale_color_gradientn(colours = rainbow(5)) + coord_fixed()
print(plot_grid(means, ys,labels="AUTO"))
}
plot.lsm(r,a,y,d)
plot.lsm<-function(model, a, y, d)
{
aa<-as.data.frame(a$anchorpoints)
colnames(aa)<-c("latitude","longitude")
s<-model$solutions
s<-as.data.frame(s)
colnames(s)<-c("lambda1", "lambda2", "phi", "sigma")
g<-cbind(aa,s)
newpoints <- data.frame(latitude = double(), longitude = double())
for (i in 1:dim(g)[1])
{
#newpoints<-rbind(newpoints, c(g$latitude[i]+a$width/2, g$longitude[i]))
#newpoints<-rbind(newpoints, c(g$latitude[i]-a$width/2, g$longitude[i]))
#newpoints<-rbind(newpoints, c(g$latitude[i], g$longitude[i]+a$height/2))
#newpoints<-rbind(newpoints, c(g$latitude[i], g$longitude[i]-a$height/2))
newpoints<-rbind(newpoints, c(g$latitude[i]+a$width/sqrt(2), g$longitude[i]+a$height/sqrt(2)))
newpoints<-rbind(newpoints, c(g$latitude[i]+a$width/sqrt(2), g$longitude[i]-a$height/sqrt(2)))
newpoints<-rbind(newpoints, c(g$latitude[i]-a$width/sqrt(2), g$longitude[i]+a$height/sqrt(2)))
newpoints<-rbind(newpoints, c(g$latitude[i]-a$width/sqrt(2), g$longitude[i]-a$height/sqrt(2)))
}
colnames(newpoints)<-c("latitude","longitude")
parameters<-smoothing(model$solutions,a$anchorpoints,model$delta,as.matrix(newpoints))
parameters<-as.data.frame(parameters)
colnames(parameters)<-c("lambda1", "lambda2", "phi", "sigma")
newpos<-cbind(newpoints, parameters)
allpoints<-rbind(g, newpos)
###DATI INIZIALI
dd <- as.data.frame(d)
#windows()
#p <- ggplot(dd, aes(x=V1, y=V2, color=y)) + geom_point() + scale_color_gradientn(colours = rainbow(5)) + coord_fixed()
#print(p)
x11(ypos=-100, xpos=-100)
p <- ggplot(dd, aes(x=V1, y=V2, size=y)) + geom_point()
print(p)
###ELLISSI
x11(ypos=-100,xpos=-100)
p <- ggplot(g, aes(x=latitude, y=longitude)) + geom_ellipse(aes(x0 = latitude, y0 = longitude, a = lambda1, b = lambda2, angle = phi), data = g) + coord_fixed()
print(p)
###PARAMETERS
x11(height=600, width=600, ypos=-100,xpos=-100)
p1 <- ggplot(allpoints, aes(x=latitude, y=longitude, color=lambda1)) + geom_point() + scale_color_gradientn(colours = rainbow(5)) + coord_fixed()
p2 <- ggplot(allpoints, aes(x=latitude, y=longitude, color=lambda2)) + geom_point() + scale_color_gradientn(colours = rainbow(5)) + coord_fixed()
p3 <- ggplot(allpoints, aes(x=latitude, y=longitude, color=phi)) + geom_point() + scale_color_gradientn(colours = rainbow(5)) + coord_fixed()
p4 <- ggplot(allpoints, aes(x=latitude, y=longitude, color=sigma)) + geom_point() + scale_color_gradientn(colours = rainbow(5)) + coord_fixed()
print(plot_grid(p1,p2,p3,p4,labels="AUTO"))
###FUNCTION VALUES
predictedvalues<-predikt(y,d,model$anchorpoints,model$epsilon,model$delta,model$solutions,as.matrix(allpoints)[,1:2])
x11(ypos=-100, xpos=-100, height=600, width=300)
means <- ggplot(allpoints, aes(x=latitude, y=longitude, color=predictedvalues$predictedmean)) + geom_point() + scale_color_gradientn(colours = rainbow(5)) + coord_fixed()
ys <- ggplot(allpoints, aes(x=latitude, y=longitude, color=predictedvalues$ypredicted)) + geom_point() + scale_color_gradientn(colours = rainbow(5)) + coord_fixed()
print(plot_grid(means, ys,labels="AUTO"))
}
plot.lsm(r,a,y,d)
plot.lsm<-function(model, a, y, d)
{
aa<-as.data.frame(a$anchorpoints)
colnames(aa)<-c("latitude","longitude")
s<-model$solutions
s<-as.data.frame(s)
colnames(s)<-c("lambda1", "lambda2", "phi", "sigma")
g<-cbind(aa,s)
newpoints <- data.frame(latitude = double(), longitude = double())
for (i in 1:dim(g)[1])
{
#newpoints<-rbind(newpoints, c(g$latitude[i]+a$width/2, g$longitude[i]))
#newpoints<-rbind(newpoints, c(g$latitude[i]-a$width/2, g$longitude[i]))
#newpoints<-rbind(newpoints, c(g$latitude[i], g$longitude[i]+a$height/2))
#newpoints<-rbind(newpoints, c(g$latitude[i], g$longitude[i]-a$height/2))
newpoints<-rbind(newpoints, c(g$latitude[i]+a$width/sqrt(2), g$longitude[i]+a$height/sqrt(2)))
newpoints<-rbind(newpoints, c(g$latitude[i]+a$width/sqrt(2), g$longitude[i]-a$height/sqrt(2)))
newpoints<-rbind(newpoints, c(g$latitude[i]-a$width/sqrt(2), g$longitude[i]+a$height/sqrt(2)))
newpoints<-rbind(newpoints, c(g$latitude[i]-a$width/sqrt(2), g$longitude[i]-a$height/sqrt(2)))
}
colnames(newpoints)<-c("latitude","longitude")
parameters<-smoothing(model$solutions,a$anchorpoints,model$delta,as.matrix(newpoints))
parameters<-as.data.frame(parameters)
colnames(parameters)<-c("lambda1", "lambda2", "phi", "sigma")
newpos<-cbind(newpoints, parameters)
allpoints<-rbind(g, newpos)
###DATI INIZIALI
dd <- as.data.frame(d)
#windows()
#p <- ggplot(dd, aes(x=V1, y=V2, color=y)) + geom_point() + scale_color_gradientn(colours = rainbow(5)) + coord_fixed()
#print(p)
x11(ypos=-100, xpos=-100)
p <- ggplot(dd, aes(x=V1, y=V2, size=y)) + geom_point()
print(p)
###ELLISSI
x11(ypos=-100,xpos=-100)
p <- ggplot(g, aes(x=latitude, y=longitude)) + geom_ellipse(aes(x0 = latitude, y0 = longitude, a = lambda1, b = lambda2, angle = phi), data = g) + coord_fixed()
print(p)
###PARAMETERS
x11(height=600, width=600, ypos=-100,xpos=-100)
p1 <- ggplot(allpoints, aes(x=latitude, y=longitude, color=lambda1)) + geom_point() + scale_color_gradientn(colours = rainbow(5)) + coord_fixed()
p2 <- ggplot(allpoints, aes(x=latitude, y=longitude, color=lambda2)) + geom_point() + scale_color_gradientn(colours = rainbow(5)) + coord_fixed()
p3 <- ggplot(allpoints, aes(x=latitude, y=longitude, color=phi)) + geom_point() + scale_color_gradientn(colours = rainbow(5)) + coord_fixed()
p4 <- ggplot(allpoints, aes(x=latitude, y=longitude, color=sigma)) + geom_point() + scale_color_gradientn(colours = rainbow(5)) + coord_fixed()
print(plot_grid(p1,p2,p3,p4,labels="AUTO"))
###FUNCTION VALUES
predictedvalues<-predikt(y,d,model$anchorpoints,model$epsilon,model$delta,model$solutions,as.matrix(allpoints)[,1:2])
x11(ypos=-100, xpos=-100)
means <- ggplot(allpoints, aes(x=latitude, y=longitude, color=predictedvalues$predictedmean)) + geom_point() + scale_color_gradientn(colours = rainbow(5)) + coord_fixed()
ys <- ggplot(allpoints, aes(x=latitude, y=longitude, color=predictedvalues$ypredicted)) + geom_point() + scale_color_gradientn(colours = rainbow(5)) + coord_fixed()
print(means)
#print(plot_grid(means, ys,labels="AUTO"))
}
plot.lsm(r,a,y,d)
plot.lsm<-function(model, a, y, d)
{
aa<-as.data.frame(a$anchorpoints)
colnames(aa)<-c("latitude","longitude")
s<-model$solutions
s<-as.data.frame(s)
colnames(s)<-c("lambda1", "lambda2", "phi", "sigma")
g<-cbind(aa,s)
newpoints <- data.frame(latitude = double(), longitude = double())
for (i in 1:dim(g)[1])
{
#newpoints<-rbind(newpoints, c(g$latitude[i]+a$width/2, g$longitude[i]))
#newpoints<-rbind(newpoints, c(g$latitude[i]-a$width/2, g$longitude[i]))
#newpoints<-rbind(newpoints, c(g$latitude[i], g$longitude[i]+a$height/2))
#newpoints<-rbind(newpoints, c(g$latitude[i], g$longitude[i]-a$height/2))
newpoints<-rbind(newpoints, c(g$latitude[i]+a$width/sqrt(2), g$longitude[i]+a$height/sqrt(2)))
newpoints<-rbind(newpoints, c(g$latitude[i]+a$width/sqrt(2), g$longitude[i]-a$height/sqrt(2)))
newpoints<-rbind(newpoints, c(g$latitude[i]-a$width/sqrt(2), g$longitude[i]+a$height/sqrt(2)))
newpoints<-rbind(newpoints, c(g$latitude[i]-a$width/sqrt(2), g$longitude[i]-a$height/sqrt(2)))
}
colnames(newpoints)<-c("latitude","longitude")
parameters<-smoothing(model$solutions,a$anchorpoints,model$delta,as.matrix(newpoints))
parameters<-as.data.frame(parameters)
colnames(parameters)<-c("lambda1", "lambda2", "phi", "sigma")
newpos<-cbind(newpoints, parameters)
allpoints<-rbind(g, newpos)
###DATI INIZIALI
dd <- as.data.frame(d)
#windows()
#p <- ggplot(dd, aes(x=V1, y=V2, color=y)) + geom_point() + scale_color_gradientn(colours = rainbow(5)) + coord_fixed()
#print(p)
x11(ypos=-100, xpos=-100)
p <- ggplot(dd, aes(x=V1, y=V2, size=y)) + geom_point()
print(p)
###ELLISSI
x11(ypos=-100,xpos=-100)
p <- ggplot(g, aes(x=latitude, y=longitude)) + geom_ellipse(aes(x0 = latitude, y0 = longitude, a = lambda1, b = lambda2, angle = phi), data = g) + coord_fixed()
print(p)
###PARAMETERS
x11(height=600, width=600, ypos=-100,xpos=-100)
p1 <- ggplot(allpoints, aes(x=latitude, y=longitude, color=lambda1)) + geom_point() + scale_color_gradientn(colours = rainbow(5)) + coord_fixed()
p2 <- ggplot(allpoints, aes(x=latitude, y=longitude, color=lambda2)) + geom_point() + scale_color_gradientn(colours = rainbow(5)) + coord_fixed()
p3 <- ggplot(allpoints, aes(x=latitude, y=longitude, color=phi)) + geom_point() + scale_color_gradientn(colours = rainbow(5)) + coord_fixed()
p4 <- ggplot(allpoints, aes(x=latitude, y=longitude, color=sigma)) + geom_point() + scale_color_gradientn(colours = rainbow(5)) + coord_fixed()
print(plot_grid(p1,p2,p3,p4,labels="AUTO"))
###FUNCTION VALUES
predictedvalues<-predikt(y,d,model$anchorpoints,model$epsilon,model$delta,model$solutions,as.matrix(allpoints)[,1:2])
x11(ypos=-100, xpos=-100, height=600, width=800)
means <- ggplot(allpoints, aes(x=latitude, y=longitude, color=predictedvalues$predictedmean)) + geom_point() + scale_color_gradientn(colours = rainbow(5)) + coord_fixed()
ys <- ggplot(allpoints, aes(x=latitude, y=longitude, color=predictedvalues$ypredicted)) + geom_point() + scale_color_gradientn(colours = rainbow(5)) + coord_fixed()
print(plot_grid(means, ys,labels="AUTO"))
}
plot.lsm(r,a,y,d)
plot.lsm<-function(model, a, y, d)
{
aa<-as.data.frame(a$anchorpoints)
colnames(aa)<-c("latitude","longitude")
s<-model$solutions
s<-as.data.frame(s)
colnames(s)<-c("lambda1", "lambda2", "phi", "sigma")
g<-cbind(aa,s)
newpoints <- data.frame(latitude = double(), longitude = double())
for (i in 1:dim(g)[1])
{
#newpoints<-rbind(newpoints, c(g$latitude[i]+a$width/2, g$longitude[i]))
#newpoints<-rbind(newpoints, c(g$latitude[i]-a$width/2, g$longitude[i]))
#newpoints<-rbind(newpoints, c(g$latitude[i], g$longitude[i]+a$height/2))
#newpoints<-rbind(newpoints, c(g$latitude[i], g$longitude[i]-a$height/2))
newpoints<-rbind(newpoints, c(g$latitude[i]+a$width/sqrt(2), g$longitude[i]+a$height/sqrt(2)))
newpoints<-rbind(newpoints, c(g$latitude[i]+a$width/sqrt(2), g$longitude[i]-a$height/sqrt(2)))
newpoints<-rbind(newpoints, c(g$latitude[i]-a$width/sqrt(2), g$longitude[i]+a$height/sqrt(2)))
newpoints<-rbind(newpoints, c(g$latitude[i]-a$width/sqrt(2), g$longitude[i]-a$height/sqrt(2)))
}
colnames(newpoints)<-c("latitude","longitude")
parameters<-smoothing(model$solutions,a$anchorpoints,model$delta,as.matrix(newpoints))
parameters<-as.data.frame(parameters)
colnames(parameters)<-c("lambda1", "lambda2", "phi", "sigma")
newpos<-cbind(newpoints, parameters)
allpoints<-rbind(g, newpos)
###DATI INIZIALI
dd <- as.data.frame(d)
#windows()
#p <- ggplot(dd, aes(x=V1, y=V2, color=y)) + geom_point() + scale_color_gradientn(colours = rainbow(5)) + coord_fixed()
#print(p)
x11(ypos=-100, xpos=-100)
p <- ggplot(dd, aes(x=V1, y=V2, size=y)) + geom_point()
print(p)
###ELLISSI
x11(ypos=-100,xpos=-100)
p <- ggplot(g, aes(x=latitude, y=longitude)) + geom_ellipse(aes(x0 = latitude, y0 = longitude, a = lambda1, b = lambda2, angle = phi), data = g) + coord_fixed()
print(p)
###PARAMETERS
x11(height=600, width=600, ypos=-100,xpos=-100)
p1 <- ggplot(allpoints, aes(x=latitude, y=longitude, color=lambda1)) + geom_point() + scale_color_gradientn(colours = rainbow(5)) + coord_fixed()
p2 <- ggplot(allpoints, aes(x=latitude, y=longitude, color=lambda2)) + geom_point() + scale_color_gradientn(colours = rainbow(5)) + coord_fixed()
p3 <- ggplot(allpoints, aes(x=latitude, y=longitude, color=phi)) + geom_point() + scale_color_gradientn(colours = rainbow(5)) + coord_fixed()
p4 <- ggplot(allpoints, aes(x=latitude, y=longitude, color=sigma)) + geom_point() + scale_color_gradientn(colours = rainbow(5)) + coord_fixed()
print(plot_grid(p1,p2,p3,p4,labels="AUTO"))
###FUNCTION VALUES
predictedvalues<-predikt(y,d,model$anchorpoints,model$epsilon,model$delta,model$solutions,as.matrix(allpoints)[,1:2])
x11(ypos=-100, xpos=-100, height=300, width=800)
means <- ggplot(allpoints, aes(x=latitude, y=longitude, color=predictedvalues$predictedmean)) + geom_point() + scale_color_gradientn(colours = rainbow(5)) + coord_fixed()
ys <- ggplot(allpoints, aes(x=latitude, y=longitude, color=predictedvalues$ypredicted)) + geom_point() + scale_color_gradientn(colours = rainbow(5)) + coord_fixed()
print(plot_grid(means, ys,labels="AUTO"))
}
plot.lsm(r,a,y,d)
plot.lsm(r,a,y,d)
library(LocallyStationaryModels)
library(ggforce)
library(cowplot)
a<-find_anchorpoints(d,30)
r<-rawmodel(y,d,a$anchorpoints,c(200,200,0.01,100),10000,8,8,"gaussian","esponenziale")
plot.lsm(r,a,y,d)
library(LocallyStationaryModels)
install.packages("ggforce")
install.packages(cowplot)
install.packages("cowplot")
library(ggforce)
library(cowplot)
a<-find_anchorpoints(d,30)
r<-rawmodel(y,d,a$anchorpoints,c(200,200,0.01,100),10000,8,8,"gaussian","esponenziale")
plot.lsm(r,a,y,d)
plot.lsm<-function(model, a, y, d)
{
aa<-as.data.frame(a$anchorpoints)
colnames(aa)<-c("latitude","longitude")
s<-model$solutions
s<-as.data.frame(s)
colnames(s)<-c("lambda1", "lambda2", "phi", "sigma")
g<-cbind(aa,s)
newpoints <- data.frame(latitude = double(), longitude = double())
for (i in 1:dim(g)[1])
{
#newpoints<-rbind(newpoints, c(g$latitude[i]+a$width/2, g$longitude[i]))
#newpoints<-rbind(newpoints, c(g$latitude[i]-a$width/2, g$longitude[i]))
#newpoints<-rbind(newpoints, c(g$latitude[i], g$longitude[i]+a$height/2))
#newpoints<-rbind(newpoints, c(g$latitude[i], g$longitude[i]-a$height/2))
newpoints<-rbind(newpoints, c(g$latitude[i]+a$width/sqrt(2), g$longitude[i]+a$height/sqrt(2)))
newpoints<-rbind(newpoints, c(g$latitude[i]+a$width/sqrt(2), g$longitude[i]-a$height/sqrt(2)))
newpoints<-rbind(newpoints, c(g$latitude[i]-a$width/sqrt(2), g$longitude[i]+a$height/sqrt(2)))
newpoints<-rbind(newpoints, c(g$latitude[i]-a$width/sqrt(2), g$longitude[i]-a$height/sqrt(2)))
}
colnames(newpoints)<-c("latitude","longitude")
parameters<-smoothing(model$solutions,a$anchorpoints,model$delta,as.matrix(newpoints))
parameters<-as.data.frame(parameters)
colnames(parameters)<-c("lambda1", "lambda2", "phi", "sigma")
newpos<-cbind(newpoints, parameters)
allpoints<-rbind(g, newpos)
###DATI INIZIALI
dd <- as.data.frame(d)
#windows()
#p <- ggplot(dd, aes(x=V1, y=V2, color=y)) + geom_point() + scale_color_gradientn(colours = rainbow(5)) + coord_fixed()
#print(p)
x11(ypos=-100, xpos=-100)
p <- ggplot(dd, aes(x=V1, y=V2, size=y)) + geom_point()
print(p)
###ELLISSI
x11(ypos=-100,xpos=-100)
p <- ggplot(g, aes(x=latitude, y=longitude)) + geom_ellipse(aes(x0 = latitude, y0 = longitude, a = lambda1, b = lambda2, angle = phi), data = g) + coord_fixed()
print(p)
###PARAMETERS
#x11(height=600, width=600, ypos=-100, xpos=-100)
x11()
p1 <- ggplot(allpoints, aes(x=latitude, y=longitude, color=lambda1)) + geom_point() + scale_color_gradientn(colours = rainbow(5)) + coord_fixed()
p2 <- ggplot(allpoints, aes(x=latitude, y=longitude, color=lambda2)) + geom_point() + scale_color_gradientn(colours = rainbow(5)) + coord_fixed()
p3 <- ggplot(allpoints, aes(x=latitude, y=longitude, color=phi)) + geom_point() + scale_color_gradientn(colours = rainbow(5)) + coord_fixed()
p4 <- ggplot(allpoints, aes(x=latitude, y=longitude, color=sigma)) + geom_point() + scale_color_gradientn(colours = rainbow(5)) + coord_fixed()
print(plot_grid(p1,p2,p3,p4,labels="AUTO"))
###FUNCTION VALUES
predictedvalues<-predikt(y,d,model$anchorpoints,model$epsilon,model$delta,model$solutions,as.matrix(allpoints)[,1:2])
x11(ypos=-100, xpos=-100, height=300, width=800)
means <- ggplot(allpoints, aes(x=latitude, y=longitude, color=predictedvalues$predictedmean)) + geom_point() + scale_color_gradientn(colours = rainbow(5)) + coord_fixed()
ys <- ggplot(allpoints, aes(x=latitude, y=longitude, color=predictedvalues$ypredicted)) + geom_point() + scale_color_gradientn(colours = rainbow(5)) + coord_fixed()
print(plot_grid(means, ys,labels="AUTO"))
}
a<-find_anchorpoints(d,30)
r<-rawmodel(y,d,a$anchorpoints,c(200,200,0.01,100),10000,8,8,"gaussian","esponenziale")
plot.lsm(r,a,y,d)
library(LocallyStationaryModels)
library(ggforce)
library(cowplot)
a<-find_anchorpoints(d,30)
r<-rawmodel(y,d,a$anchorpoints,c(200,200,0.01,100),10000,8,8,"gaussian","esponenziale")
plot.lsm(r,a,y,d)
x11(width=600, height=600)
plot.lsm(r,a,y,d)
library(ggforce)
library(cowplot)
a<-find_anchorpoints(d,10)
r<-rawmodel(y,d,a$anchorpoints,c(200,200,0.01,100),10000,8,8,"gaussian","esponenziale")
plot.lsm(r,a,y,d)
a<-find_anchorpoints(d,30)
r<-rawmodel(y,d,a$anchorpoints,c(200,200,0.01,100),10000,8,8,"gaussian","esponenziale")
plot.lsm(r,a,y,d)
library(LocallyStationaryModels)
library(ggforce)
library(cowplot)
a<-find_anchorpoints(d,30)
r<-rawmodel(y,d,a$anchorpoints,c(200,200,0.01,100),10000,8,8,"gaussian","esponenziale")
plot.lsm(r,a,y,d)
x11(width=600, height=600)
plot.lsm(r,a,y,d)
v
clear
cler
library(LocallyStationaryModels)
x11(width=600, height=600)
plot.lsm(r,a,y,d)
library(LocallyStationaryModels)
plot.lsm(r,a,y,d)
library(LocallyStationaryModels)
x11(width=600, height=600)
plot.lsm(r,a,y,d)
library(LocallyStationaryModels)
x11(width=600, height=600)
plot.lsm(r,a,y,d)
library(LocallyStationaryModels)
library(ggforce)
library(cowplot)
a<-find_anchorpoints(d,30)
r<-rawmodel(y,d,a$anchorpoints,c(200,200,0.01,100),10000,8,8,"gaussian","esponenziale")
a<-find_anchorpoints(d,20)
r<-rawmodel(y,d,a$anchorpoints,c(200,200,0.01,100),10000,8,8,"gaussian","esponenziale")
x11(width=600, height = 600
)
plot.lsm(r,a,y,d)
library(LocallyStationaryModels)
a<-find_anchorpoints(d,30)
r<-rawmodel(y,d,a$anchorpoints,c(200,200,0.01,100),10000,8,8,"gaussian","esponenziale")
rawmodel(y,d,a$anchorpoints,c(200,200,0.01,100),10000,8,8,"gaussian","esponenziale")
library(LocallyStationaryModels)
r<-rawmodel(y,d,a$anchorpoints,c(200,200,0.01,100),10000,8,8,"gaussian","esponenziale")
library(LocallyStationaryModels)
r<-rawmodel(y,d,a$anchorpoints,c(200,200,0.01,100),10000,8,8,"gaussian","esponenziale")
r<-rawmodel(y,d,a$anchorpoints,c(200,200,0.01,100),10000,8,8,"gaussian","esponenziale")
library(LocallyStationaryModels)
r<-rawmodel(y,d,a$anchorpoints,c(200,200,0.01,100),10000,8,8,"gaussian","esponenziale")
library(LocallyStationaryModels)
a<-find_anchorpoints(d,30)
r<-rawmodel(y,d,a$anchorpoints,c(200,200,0.01,100),10000,8,8,"gaussian","esponenziale")
plot.lsm(r,a,y,d)
library(LocallyStationaryModels)
a<-find_anchorpoints(d,30)
r<-rawmodel(y,d,a$anchorpoints,c(200,200,0.01,100),10000,8,8,"gaussian","esponenziale")
x11(width = 600, height = 600)
plot.lsm(r,a,y,d)
library(ggforce)
library(cowplot)
library(LocallyStationaryModels)
a<-find_anchorpoints(d,30)
r<-rawmodel(y,d,a$anchorpoints,c(200,200,0.01,100),10000,8,8,"gaussian","esponenziale")
plot.lsm(r,a,y,d)
library(LocallyStationaryModels)
plot.lsm(r,a,y,d)
library(LocallyStationaryModels)
allpoints <- plot.lsm(r,a,y,d)
head(allpoints)
library(LocallyStationaryModels)
library(ggforce)
library(cowplot)
a<-find_anchorpoints(d,30)
r<-rawmodel(y,d,a$anchorpoints,c(200,200,0.01,100),10000,8,8,"gaussian","esponenziale")
x11(height = 10, width = 10)
mypoints <- plot.lsm(r,a,y,d)
library(cowplot)
library(ggforce)
mypoints <- plot.lsm(r,a,y,d)
library(ggforce)
library(cowplot)
a<-find_anchorpoints(d,8)
library(LocallyStationaryModels)
library(ggforce)
library(cowplot)
a<-find_anchorpoints(d,8)
r<-rawmodel(y,d,a$anchorpoints,c(200,200,0.01,100),10000,8,12,"gaussian","esponenziale")
mmypoints <- plot.lsm(r,a,y,d)
