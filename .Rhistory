# Find the solutions
solu <- findsolutions.lsm(vario, "maternNuFixed 18", c(200,200,0.01))
solu$solutions
# Find the solutions
solu <- findsolutions.lsm(vario, "maternNuFixed 18", c(200,200))
solu$solutions
# Find the solutions
solu <- findsolutions.lsm(vario, "maternNuFixed 18", c(200,200,0.01,100))
solu$solutions
library(LocallyStationaryModels)
# Clean the environment
rm(list = ls())
# Load the libraries
library(LocallyStationaryModels)
library(sp)           ## Data management
# Load the data
data(meuse)
d <- cbind(meuse$x, meuse$y)
y <- meuse$elev
# Find anchorpoints
a <- find_anchorpoints.lsm(d,12)
# Build the empiric variogram
vario <- variogram.lsm(y,d,a$anchorpoints,350,8,8,"gaussian")
# Find the solutions
solu <- findsolutions.lsm(vario, "maternNuFixed 18", c(200,200,0.01,100))
solu$solutions
# Find the solutions
solu <- findsolutions.lsm(vario, "exponential", c(200,200,0.01,100))
mypoints<-plot.lsm(model = solu, a = a, y = y, d = d, n_points = 10, points_arrangement = "random")
# Find the solutions
solu <- findsolutions.lsm(vario, "matern", c(200,200,0.01,100,10))
mypoints<-plot.lsm(model = solu, a = a, y = y, d = d, n_points = 10, points_arrangement = "random")
solu$solutions
previsions <- predict.lsm(solu, d, y, d)
max(previsions$ypredicted - y)
# Find the solutions
solu <- findsolutions.lsm(vario, "exponential", c(200,200,0.01,100,10))
previsions <- predict.lsm(solu, d, y, d)
max(previsions$ypredicted - y)
library(LocallyStationaryModels)
# Clean the environment
rm(list = ls())
# Load the libraries
library(LocallyStationaryModels)
library(sp)           ## Data management
# Load the data
data(meuse)
d <- cbind(meuse$x, meuse$y)
y <- meuse$elev
# Find anchorpoints
a <- find_anchorpoints.lsm(d,12)
# Build the empiric variogram
vario <- variogram.lsm(y,d,a$anchorpoints,350,8,8,"gaussian")
# Find the solutions
solu <- findsolutions.lsm(vario, "maternNuFixed 18", c(200,200,0.01,100))
previsions <- predict.lsm(solu, d, y, d)
max(previsions$ypredicted - y)
# Find the solutions
solu <- findsolutions.lsm(vario, "maternNuFixed 18", c(200,200))
solu$solutions
# Find the solutions
solu <- findsolutions.lsm(vario, "matern", c(200,200))
solu$solutions
library(LocallyStationaryModels)
# Find the solutions
solu <- findsolutions.lsm(vario, "exponential", c(200,200))
# Find the solutions
solu <- findsolutions.lsm(vario, "matern", c(200,200,0.01,100))
solu$solutions
# Find the solutions
solu <- findsolutions.lsm(vario, "matern", c(200,200,0.01,100,10))
previsions <- predict.lsm(solu, d, y, d)
# Clean the environment
rm(list = ls())
# Load the libraries
library(LocallyStationaryModels)
library(sp)           ## Data management
# Load the data
data(meuse)
d <- cbind(meuse$x, meuse$y)
y <- meuse$elev
# Find anchorpoints
a <- find_anchorpoints.lsm(d,12)
# Build the empiric variogram
vario <- variogram.lsm(y,d,a$anchorpoints,350,8,8,"gaussian")
library(LocallyStationaryModels)
# Clean the environment
rm(list = ls())
# Load the libraries
library(LocallyStationaryModels)
library(sp)           ## Data management
# Load the data
data(meuse)
d <- cbind(meuse$x, meuse$y)
y <- meuse$elev
# Find anchorpoints
a <- find_anchorpoints.lsm(d,12)
# Build the empiric variogram
vario <- variogram.lsm(y,d,a$anchorpoints,350,8,8,"gaussian")
# Find the solutions
solu <- findsolutions.lsm(vario, "maternNuFixed 18", c(200,200,0.01,100))
mypoints<-plot.lsm(model = solu, a = a, y = y, d = d, n_points = 10, points_arrangement = "random")
previsions <- predict.lsm(solu, d, y, d)
# Clean the environment
rm(list = ls())
# Load the libraries
library(LocallyStationaryModels)
library(sp)           ## Data management
# Load the data
data(meuse)
d <- cbind(meuse$x, meuse$y)
y <- meuse$elev
# Find anchorpoints
a <- find_anchorpoints.lsm(d,12)
# Build the empiric variogram
vario <- variogram.lsm(y,d,a$anchorpoints,350,8,8,"gaussian")
# Find the solutions
solu <- findsolutions.lsm(vario, "maternNuFixed 18", c(200,200,0.01,100))
# Plot of the solutions
x11()
# Clean the environment
rm(list = ls())
# Load the libraries
library(LocallyStationaryModels)
library(sp)           ## Data management
# Load the data
data(meuse)
d <- cbind(meuse$x, meuse$y)
y <- meuse$elev
# Find anchorpoints
a <- find_anchorpoints.lsm(d,12)
library(LocallyStationaryModels)
# Load the data
data(meuse)
d <- cbind(meuse$x, meuse$y)
y <- meuse$elev
# Find anchorpoints
a <- find_anchorpoints.lsm(d,12)
# Build the empiric variogram
vario <- variogram.lsm(y,d,a$anchorpoints,350,8,8,"gaussian")
# Find the solutions
solu <- findsolutions.lsm(vario, "maternNuFixed 18", c(200,200,0.01,100))
# Find the solutions
solu <- findsolutions.lsm(vario, "exponential", c(200,200,0.01,100))
previsions <- predict.lsm(solu, d, y, d)
# Find the solutions
solu <- findsolutions.lsm(vario, "exponential", c(200,200))
# Find the solutions
solu <- findsolutions.lsm(vario, "matern", c(200,200,0.01,100))
previsions <- predict.lsm(solu, d, y, d)
max(previsions$ypredicted - y)
library(LocallyStationaryModels)
# Clean the environment
rm(list = ls())
# Load the libraries
library(LocallyStationaryModels)
library(sp)           ## Data management
# Load the data
data(meuse)
d <- cbind(meuse$x, meuse$y)
y <- meuse$elev
# Find anchorpoints
a <- find_anchorpoints.lsm(d,12)
# Build the empiric variogram
vario <- variogram.lsm(y,d,a$anchorpoints,350,8,8,"gaussian")
# Find the solutions
solu <- findsolutions.lsm(vario, "matern", c(200,200,0.01,100))
previsions <- predict.lsm(solu, d, y, d)
# Find the solutions
solu <- findsolutions.lsm(vario, "matern", c(200,200,0.01,100,10))
previsions <- predict.lsm(solu, d, y, d)
library(LocallyStationaryModels)
library(LocallyStationaryModels)
# Clean the environment
rm(list = ls())
# Load the libraries
library(LocallyStationaryModels)
library(sp)           ## Data management
# Load the data
data(meuse)
d <- cbind(meuse$x, meuse$y)
y <- meuse$elev
# Find anchorpoints
a <- find_anchorpoints.lsm(d,12)
# Build the empiric variogram
vario <- variogram.lsm(y,d,a$anchorpoints,350,8,8,"gaussian")
# Find the solutions
solu <- findsolutions.lsm(vario, "matern", c(200,200,0.01,100))
# Plot of the solutions
x11()
mypoints<-plot.lsm(model = solu, a = a, y = y, d = d, n_points = 10, points_arrangement = "random")
solu <- findsolutions.lsm(vario, "exponential", c(200,200,0.01,100))
mypoints<-plot.lsm(model = solu, a = a, y = y, d = d, n_points = 10, points_arrangement = "random")
previsions <- predict.lsm(solu, d, y, d)
max(previsions$ypredicted - y)
library(LocallyStationaryModels)
# Clean the environment
rm(list = ls())
# Load the libraries
library(LocallyStationaryModels)
library(sp)           ## Data management
# Load the data
data(meuse)
d <- cbind(meuse$x, meuse$y)
y <- meuse$elev
# Find anchorpoints
a <- find_anchorpoints.lsm(d,12)
# Build the empiric variogram
vario <- variogram.lsm(y,d,a$anchorpoints,350,8,8,"gaussian")
# Find the solutions
solu <- findsolutions.lsm(vario, "matern", c(200,200,0.01,100))
# Plot of the solutions
x11()
previsions <- predict.lsm(solu, d, y, d)
max(previsions$ypredicted - y)
# Find the solutions
solu <- findsolutions.lsm(vario, "matern", c(200,200,0.01,100,10))
mypoints<-plot.lsm(model = solu, a = a, y = y, d = d, n_points = 10, points_arrangement = "random")
previsions <- predict.lsm(solu, d, y, d)
library(LocallyStationaryModels)
# Clean the environment
rm(list = ls())
# Load the libraries
library(LocallyStationaryModels)
library(sp)           ## Data management
# Load the data
data(meuse)
d <- cbind(meuse$x, meuse$y)
y <- meuse$elev
# Find anchorpoints
a <- find_anchorpoints.lsm(d,12)
# Build the empiric variogram
vario <- variogram.lsm(y,d,a$anchorpoints,350,8,8,"gaussian")
# Find the solutions
solu <- findsolutions.lsm(vario, "matern", c(200,200,0.01,100,10))
mypoints<-plot.lsm(model = solu, a = a, y = y, d = d, n_points = 10, points_arrangement = "random")
previsions <- predict.lsm(solu, d, y, d)
library(LocallyStationaryModels)
# Clean the environment
rm(list = ls())
# Load the libraries
library(LocallyStationaryModels)
library(sp)           ## Data management
# Load the data
data(meuse)
d <- cbind(meuse$x, meuse$y)
y <- meuse$elev
# Find anchorpoints
a <- find_anchorpoints.lsm(d,12)
# Build the empiric variogram
vario <- variogram.lsm(y,d,a$anchorpoints,350,8,8,"gaussian")
# Find the solutions
solu <- findsolutions.lsm(vario, "matern", c(200,200,0.01,100,10))
x11()
mypoints<-plot.lsm(model = solu, a = a, y = y, d = d, n_points = 10, points_arrangement = "random")
previsions <- predict.lsm(solu, d, y, d)
max(previsions$ypredicted - y)
library(LocallyStationaryModels)
# Clean the environment
rm(list = ls())
# Load the libraries
library(LocallyStationaryModels)
library(sp)           ## Data management
# Load the data
data(meuse)
d <- cbind(meuse$x, meuse$y)
y <- meuse$elev
# Find anchorpoints
a <- find_anchorpoints.lsm(d,12)
# Build the empiric variogram
vario <- variogram.lsm(y,d,a$anchorpoints,350,8,8,"gaussian")
# Find the solutions
solu <- findsolutions.lsm(vario, "matern", c(200,200,0.01,100,10))
x11()
mypoints<-plot.lsm(model = solu, a = a, y = y, d = d, n_points = 10, points_arrangement = "random")
# Clean the environment
rm(list = ls())
variogramfunctions <- data.frame(name=string(), n_parameters=double())
variogramfunctions <- data.frame(name=char(), n_parameters=double())
variogramfunctions <- data.frame(name=character(), n_parameters=double())
variogramfunctions[1,]<-c("exponential", 4)
head(variogramfunctions)
variogramfunctions[2,]<-c("Exponential", 4)
variogramfunctions[3,]<-c("matern", 5)
variogramfunctions[4,]<-c("Matern", 5)
variogramfunctions[5,]<-c("gaussian", 4)
variogramfunctions[6,]<-c("Gaussian", 4)
View(variogramfunctions)
View(variogramfunctions)
variogramfunctions[7,]<-c("maternNuFixed", 4)
View(variogramfunctions)
View(variogramfunctions)
variogramfunctions["exponential"]
variogramfunctions[name=="exponential"]
variogramfunctions[variogramfunctions$name=="exponential"]
variogramfunctions[variogramfunctions$name="exponential"]
which(variogramfunctions$name == "exponential")
variogramfunctions$n_parameters[which(variogramfunctions$name == "exponential")]
variogramfunctions$n_parameters <- as.numeric(variogramfunctions$n_parameters)
save(variogramfunctions, file="variogramfunctions.Rdata")
# Clean the environment
rm(list = ls())
load(variogramfunctions.Rdata)
load("variogramfunctions.Rdata")
library(LocallyStationaryModels)
# Clean the environment
rm(list = ls())
# Load the libraries
library(LocallyStationaryModels)
library(sp)           ## Data management
# Load the data
data(meuse)
d <- cbind(meuse$x, meuse$y)
y <- meuse$elev
# Find anchorpoints
a <- find_anchorpoints.lsm(d,12)
# Build the empiric variogram
vario <- variogram.lsm(y,d,a$anchorpoints,350,8,8,"gaussian")
# Find the solutions
solu <- findsolutions.lsm(vario, "matern", c(200,200,0.01,100,10))
mypoints<-plot.lsm(model = solu, a = a, y = y, d = d, n_points = 10, points_arrangement = "random")
# Find the solutions
solu <- findsolutions.lsm(vario, "matern", c(200,200,0.01,100))
library(LocallyStationaryModels)
library(LocallyStationaryModels)
library(LocallyStationaryModels)
# Clean the environment
rm(list = ls())
# Load the libraries
library(LocallyStationaryModels)
library(sp)           ## Data management
# Load the data
data(meuse)
d <- cbind(meuse$x, meuse$y)
y <- meuse$elev
# Find anchorpoints
a <- find_anchorpoints.lsm(d,12)
# Build the empiric variogram
vario <- variogram.lsm(y,d,a$anchorpoints,350,8,8,"gaussian")
# Find the solutions
solu <- findsolutions.lsm(vario, "matern", c(200,200,0.01,100,10))
# Find the solutions
solu <- findsolutions.lsm(vario, "matern", c(200,200,0.01,100))
# Find the solutions
solu <- findsolutions.lsm(vario, "maternNuFixed", c(200,200,0.01,100))
# Find the solutions
solu <- findsolutions.lsm(vario, "maternNuFixed 11", c(200,200,0.01,100))
solu$solutions
# Find the solutions
solu <- findsolutions.lsm(vario, "matern", c(200,200,0.01,100,10))
mypoints<-plot.lsm(model = solu, a = a, y = y, d = d, n_points = 10, points_arrangement = "random")
library(LocallyStationaryModels)
# Clean the environment
rm(list = ls())
# Load the libraries
library(LocallyStationaryModels)
library(sp)           ## Data management
# Load the data
data(meuse)
d <- cbind(meuse$x, meuse$y)
y <- meuse$elev
# Find anchorpoints
a <- find_anchorpoints.lsm(d,12)
# Build the empiric variogram
vario <- variogram.lsm(y,d,a$anchorpoints,350,8,8,"gaussian")
# Find the solutions
solu <- findsolutions.lsm(vario, "matern", c(200,200,0.01,100,10))
library(LocallyStationaryModels)
load("C:/Users/luca9/Downloads/LocallyStationaryModels/data/variogramfunctions.Rdata")
usethis::use_data(variogramfunctions, internal = TRUE)
library(LocallyStationaryModels)
# Clean the environment
rm(list = ls())
# Load the libraries
library(LocallyStationaryModels)
library(sp)           ## Data management
# Load the data
data(meuse)
d <- cbind(meuse$x, meuse$y)
y <- meuse$elev
# Find anchorpoints
a <- find_anchorpoints.lsm(d,12)
# Build the empiric variogram
vario <- variogram.lsm(y,d,a$anchorpoints,350,8,8,"gaussian")
# Find the solutions
solu <- findsolutions.lsm(vario, "matern", c(200,200,0.01,100,10))
# Find the solutions
solu <- findsolutions.lsm(vario, "matern", c(200,200,0.01,100))
# Find the solutions
solu <- findsolutions.lsm(vario, "matern", c(200,200,0.01,100,10))
# Clean the environment
rm(list = ls())
# Load the data
library(LocallyStationaryModels)
load("C:/Users/luca9/Downloads/SIC.Rda")
# Load the library
library(LocallyStationaryModels)
# Load the data
load("C:/Users/luca9/Downloads/SIC.Rda")
X <- as.numeric(sic.all$coords[,1])
Y <- as.numeric(sic.all$coords[,2])
coordinates <- cbind(X, Y)
f <- as.numeric(sic.all$data)
# Find the anchorpoints
anchorpoints <- find_anchorpoints.lsm(coordinates,12)
# Build the sample variogram
variogram <- variogram.lsm(f, coordinates, anchorpoints$anchorpoints, 350, 8, 8, "gaussian")
# Solve the optimization problem
solutions <- findsolutions.lsm(variogram, "exponential", c(200,200,0.01,100))
# Plot of the solutions
x11()
mypoints<-plot.lsm(model = solutions, a = anchorpoints, y = f, d = coordinates, n_points = 10, points_arrangement = "random")
# Kriging on the original data
previsions <- predict.lsm(solutions, coordinates, f, coordinates)
max(previsions$ypredicted - y)
max(previsions$ypredicted - f)
# Find the anchorpoints
anchorpoints <- find_anchorpoints.lsm(coordinates,25)
variogram <- variogram.lsm(f, coordinates, anchorpoints$anchorpoints, 350, 8, 8, "gaussian")
# Solve the optimization problem
solutions <- findsolutions.lsm(variogram, "exponential", c(200,200,0.01,100))
# Plot of the solutions
mypoints<-plot.lsm(model = solutions, a = anchorpoints, y = f, d = coordinates, n_points = 1, points_arrangement = "random")
# Load the data
load("C:/Users/luca9/Downloads/Rain.rda")
# Load the data
load("C:/Users/luca9/Downloads/SIC.rda")
# Clean the environment
rm(list = ls())
# Load the libraries
library(LocallyStationaryModels)
# Load the data
load("C:/Users/luca9/Downloads/SIC.rda")
X <- as.numeric(sic.all$coords[.1])
X <- as.numeric(sic.all$coords[,1])
# Clean the environment
rm(list = ls())
# Load the libraries
library(LocallyStationaryModels)
# Load the data
load("C:/Users/luca9/Downloads/SIC.rda")
X <- as.numeric(sic.all$coords[,1])
Y <- as.numeric(sic.all$coords[,2])
coordinates <- cbind(X, Y)
# Find anchorpoints
anchorpoints <- find_anchorpoints.lsm(coordinates, 12)
f <- sic.all$data
# Build the empiric variogram
variogram <- variogram.lsm(f, coordinates, anchorpoints$anchorpoints, 600, 4, 4, "gaussian")
# Find the solutions
solutions <- findsolutions.lsm(variogram, "exponential", c(200,200,0.01,100))
solutions$solutions
# Build the empiric variogram
variogram <- variogram.lsm(f, coordinates, anchorpoints$anchorpoints, 1000, 4, 4, "gaussian")
# Find the solutions
solutions <- findsolutions.lsm(variogram, "exponential", c(200,200,0.01,100))
solutions$solutions
# Build the empiric variogram
variogram <- variogram.lsm(f, coordinates, anchorpoints$anchorpoints, 10000, 4, 4, "gaussian")
# Find the solutions
solutions <- findsolutions.lsm(variogram, "exponential", c(200,200,0.01,100))
solutions$solutions
# Build the empiric variogram
variogram <- variogram.lsm(f, coordinates, anchorpoints$anchorpoints, 400, 4, 4, "gaussian")
# Find the solutions
solutions <- findsolutions.lsm(variogram, "exponential", c(200,200,0.01,100))
solutions$solutions
# Build the empiric variogram
variogram <- variogram.lsm(f, coordinates, anchorpoints$anchorpoints, 600, 4, 4, "gaussian")
# Find the solutions
solutions <- findsolutions.lsm(variogram, "exponential", c(200,200,0.01,100))
solutions$solutions
# Find the solutions
solutions <- findsolutions.lsm(variogram, "exponential", c(30,100,0.01,100))
solutions$solutions
mypoints<-plot.lsm(model = solutions, a = anchorpoints, y = f, d = coordinates, n_points = 1, points_arrangement = "straight")
previsions <- predict.lsm(solutions, coordinates, f, coordinates)
mypoints<-plot.lsm(model = solutions, a = anchorpoints, y = f, d = coordinates, n_points = 2, points_arrangement = "straight")
# Clean the environment
rm(list = ls())
# Load the libraries
library(LocallyStationaryModels)
library(sp)           ## Data management
# Load the data
data(meuse)
d <- cbind(meuse$x, meuse$y)
y <- meuse$elev
# Find anchorpoints
a <- find_anchorpoints.lsm(d,12)
# Build the empiric variogram
vario <- variogram.lsm(y,d,a$anchorpoints,350,8,8,"gaussian")
# Find the solutions
solu <- findsolutions.lsm(vario, "matern", c(200,200,0.01,100,10))
previsions <- predict.lsm(solu, d, y, d)
max(previsions$ypredicted - y)
# Clean the environment
rm(list = ls())
# Load the libraries
library(LocallyStationaryModels)
library(sp)           ## Data management
# Load the data
data(meuse)
d <- cbind(meuse$x, meuse$y)
y <- meuse$elev
# Find anchorpoints
a <- find_anchorpoints.lsm(d,12)
# Build the empiric variogram
vario <- variogram.lsm(y,d,a$anchorpoints,350,8,8,"gaussian")
# Find the solutions
solu <- findsolutions.lsm(vario, "matern", c(200,200,0.01,100,10))
previsions <- predict.lsm(solu, d, y, d)
max(previsions$ypredicted - y)
